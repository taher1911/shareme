{"version":3,"file":"static/js/668.e74b2489.chunk.js","mappings":"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","sources":["../node_modules/@sanity/image-url/src/parseAssetId.ts","../node_modules/@sanity/image-url/src/parseSource.ts","../node_modules/@sanity/image-url/src/urlForImage.ts","../node_modules/@sanity/image-url/src/builder.ts","../node_modules/debug/src/browser.js","../node_modules/debug/src/common.js","../node_modules/ms/index.js","../node_modules/parse-headers/parse-headers.js","../node_modules/react-icons/lib/esm/iconsManifest.js","../node_modules/react-icons/lib/esm/iconContext.js","../node_modules/react-icons/lib/esm/iconBase.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/get-it/src/middleware/defaultOptionsProcessor.ts","../node_modules/get-it/src/middleware/defaultOptionsValidator.ts","../node_modules/get-it/src/createRequester.ts","../node_modules/get-it/src/util/pubsub.ts","../node_modules/get-it/src/util/middlewareReducer.ts","../node_modules/get-it/src/request/browser/fetchXhr.ts","../node_modules/get-it/src/request/browser-request.ts","../node_modules/is-plain-object/dist/is-plain-object.mjs","../node_modules/get-it/src/middleware/debug.ts","../node_modules/get-it/src/middleware/httpErrors.ts","../node_modules/get-it/src/util/isBuffer.ts","../node_modules/get-it/src/middleware/jsonRequest.ts","../node_modules/get-it/src/middleware/jsonResponse.ts","../node_modules/get-it/src/util/global.ts","../node_modules/get-it/src/middleware/observable.ts","../node_modules/get-it/src/middleware/promise.ts","../node_modules/get-it/src/util/browser-shouldRetry.ts","../node_modules/get-it/src/middleware/retry/shared-retry.ts","../node_modules/get-it/src/middleware/retry/browser-retry.ts","../node_modules/tslib/tslib.es6.js","../node_modules/rxjs/src/internal/util/isFunction.ts","../node_modules/rxjs/src/internal/util/createErrorClass.ts","../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../node_modules/rxjs/src/internal/util/arrRemove.ts","../node_modules/rxjs/src/internal/Subscription.ts","../node_modules/rxjs/src/internal/config.ts","../node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts","../node_modules/rxjs/src/internal/util/noop.ts","../node_modules/rxjs/src/internal/NotificationFactories.ts","../node_modules/rxjs/src/internal/util/errorContext.ts","../node_modules/rxjs/src/internal/Subscriber.ts","../node_modules/rxjs/src/internal/util/reportUnhandledError.ts","../node_modules/rxjs/src/internal/symbol/observable.ts","../node_modules/rxjs/src/internal/util/identity.ts","../node_modules/rxjs/src/internal/util/pipe.ts","../node_modules/rxjs/src/internal/Observable.ts","../node_modules/rxjs/src/internal/util/EmptyError.ts","../node_modules/rxjs/src/internal/lastValueFrom.ts","../node_modules/rxjs/src/internal/util/lift.ts","../node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts","../node_modules/rxjs/src/internal/operators/map.ts","../node_modules/rxjs/src/internal/operators/filter.ts","../node_modules/@sanity/client/src/http/errors.ts","../node_modules/@sanity/client/src/http/request.ts","../node_modules/@sanity/client/src/http/requestOptions.ts","../node_modules/@sanity/client/src/util/getSelection.ts","../node_modules/@sanity/client/src/validators.ts","../node_modules/@sanity/client/src/data/patch.ts","../node_modules/@sanity/client/src/data/encodeQueryString.ts","../node_modules/@sanity/client/src/data/transaction.ts","../node_modules/@sanity/client/src/data/dataMethods.ts","../node_modules/@sanity/client/src/assets/AssetsClient.ts","../node_modules/@sanity/client/src/generateHelpUrl.ts","../node_modules/@sanity/client/src/warnings.ts","../node_modules/@sanity/client/src/util/once.ts","../node_modules/@sanity/client/src/config.ts","../node_modules/@sanity/client/src/data/listen.ts","../node_modules/@sanity/client/src/util/defaults.ts","../node_modules/@sanity/client/src/util/pick.ts","../node_modules/@sanity/client/src/datasets/DatasetsClient.ts","../node_modules/@sanity/client/src/projects/ProjectsClient.ts","../node_modules/@sanity/client/src/users/UsersClient.ts","../node_modules/@sanity/client/src/SanityClient.ts","../node_modules/@sanity/client/src/index.browser.ts","../node_modules/get-it/src/index.browser.ts","../node_modules/get-it/src/middleware/progress/browser-progress.ts","../node_modules/@sanity/client/src/http/browserMiddleware.ts"],"sourcesContent":["const example = 'image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg'\n\nexport default function parseAssetId(ref: string) {\n  const [, id, dimensionString, format] = ref.split('-')\n\n  if (!id || !dimensionString || !format) {\n    throw new Error(`Malformed asset _ref '${ref}'. Expected an id like \"${example}\".`)\n  }\n\n  const [imgWidthStr, imgHeightStr] = dimensionString.split('x')\n\n  const width = +imgWidthStr\n  const height = +imgHeightStr\n\n  const isValidAssetId = isFinite(width) && isFinite(height)\n  if (!isValidAssetId) {\n    throw new Error(`Malformed asset _ref '${ref}'. Expected an id like \"${example}\".`)\n  }\n\n  return {id, width, height, format}\n}\n","import {\n  SanityAsset,\n  SanityImageObject,\n  SanityImageSource,\n  SanityImageWithAssetStub,\n  SanityReference,\n} from './types'\n\nconst isRef = (src: SanityImageSource): src is SanityReference => {\n  const source = src as SanityReference\n  return source ? typeof source._ref === 'string' : false\n}\n\nconst isAsset = (src: SanityImageSource): src is SanityAsset => {\n  const source = src as SanityAsset\n  return source ? typeof source._id === 'string' : false\n}\n\nconst isAssetStub = (src: SanityImageSource): src is SanityImageWithAssetStub => {\n  const source = src as SanityImageWithAssetStub\n  return source && source.asset ? typeof source.asset.url === 'string' : false\n}\n\n// Convert an asset-id, asset or image to an image record suitable for processing\n// eslint-disable-next-line complexity\nexport default function parseSource(source?: SanityImageSource) {\n  if (!source) {\n    return null\n  }\n\n  let image: SanityImageObject\n\n  if (typeof source === 'string' && isUrl(source)) {\n    // Someone passed an existing image url?\n    image = {\n      asset: {_ref: urlToId(source)},\n    }\n  } else if (typeof source === 'string') {\n    // Just an asset id\n    image = {\n      asset: {_ref: source},\n    }\n  } else if (isRef(source)) {\n    // We just got passed an asset directly\n    image = {\n      asset: source,\n    }\n  } else if (isAsset(source)) {\n    // If we were passed an image asset document\n    image = {\n      asset: {\n        _ref: source._id || '',\n      },\n    }\n  } else if (isAssetStub(source)) {\n    // If we were passed a partial asset (`url`, but no `_id`)\n    image = {\n      asset: {\n        _ref: urlToId(source.asset.url),\n      },\n    }\n  } else if (typeof source.asset === 'object') {\n    // Probably an actual image with materialized asset\n    image = {...source}\n  } else {\n    // We got something that does not look like an image, or it is an image\n    // that currently isn't sporting an asset.\n    return null\n  }\n\n  const img = source as SanityImageObject\n  if (img.crop) {\n    image.crop = img.crop\n  }\n\n  if (img.hotspot) {\n    image.hotspot = img.hotspot\n  }\n\n  return applyDefaults(image)\n}\n\nfunction isUrl(url: string) {\n  return /^https?:\\/\\//.test(`${url}`)\n}\n\nfunction urlToId(url: string) {\n  const parts = url.split('/').slice(-1)\n  return `image-${parts[0]}`.replace(/\\.([a-z]+)$/, '-$1')\n}\n\n// Mock crop and hotspot if image lacks it\nfunction applyDefaults(image: SanityImageObject) {\n  if (image.crop && image.hotspot) {\n    return image as Required<SanityImageObject>\n  }\n\n  // We need to pad in default values for crop or hotspot\n  const result = {...image}\n\n  if (!result.crop) {\n    result.crop = {\n      left: 0,\n      top: 0,\n      bottom: 0,\n      right: 0,\n    }\n  }\n\n  if (!result.hotspot) {\n    result.hotspot = {\n      x: 0.5,\n      y: 0.5,\n      height: 1.0,\n      width: 1.0,\n    }\n  }\n\n  return result as Required<SanityImageObject>\n}\n","import parseAssetId from './parseAssetId'\nimport parseSource from './parseSource'\nimport {\n  CropSpec,\n  HotspotSpec,\n  ImageUrlBuilderOptions,\n  ImageUrlBuilderOptionsWithAsset,\n  SanityAsset,\n  SanityImageFitResult,\n  SanityImageRect,\n  SanityReference,\n} from './types'\n\nexport const SPEC_NAME_TO_URL_NAME_MAPPINGS = [\n  ['width', 'w'],\n  ['height', 'h'],\n  ['format', 'fm'],\n  ['download', 'dl'],\n  ['blur', 'blur'],\n  ['sharpen', 'sharp'],\n  ['invert', 'invert'],\n  ['orientation', 'or'],\n  ['minHeight', 'min-h'],\n  ['maxHeight', 'max-h'],\n  ['minWidth', 'min-w'],\n  ['maxWidth', 'max-w'],\n  ['quality', 'q'],\n  ['fit', 'fit'],\n  ['crop', 'crop'],\n  ['saturation', 'sat'],\n  ['auto', 'auto'],\n  ['dpr', 'dpr'],\n  ['pad', 'pad'],\n]\n\nexport default function urlForImage(options: ImageUrlBuilderOptions): string {\n  let spec = {...(options || {})}\n  const source = spec.source\n  delete spec.source\n\n  const image = parseSource(source)\n  if (!image) {\n    throw new Error(`Unable to resolve image URL from source (${JSON.stringify(source)})`)\n  }\n\n  const id = (image.asset as SanityReference)._ref || (image.asset as SanityAsset)._id || ''\n  const asset = parseAssetId(id)\n\n  // Compute crop rect in terms of pixel coordinates in the raw source image\n  const cropLeft = Math.round(image.crop.left * asset.width)\n  const cropTop = Math.round(image.crop.top * asset.height)\n  const crop = {\n    left: cropLeft,\n    top: cropTop,\n    width: Math.round(asset.width - image.crop.right * asset.width - cropLeft),\n    height: Math.round(asset.height - image.crop.bottom * asset.height - cropTop),\n  }\n\n  // Compute hot spot rect in terms of pixel coordinates\n  const hotSpotVerticalRadius = (image.hotspot.height * asset.height) / 2\n  const hotSpotHorizontalRadius = (image.hotspot.width * asset.width) / 2\n  const hotSpotCenterX = image.hotspot.x * asset.width\n  const hotSpotCenterY = image.hotspot.y * asset.height\n  const hotspot = {\n    left: hotSpotCenterX - hotSpotHorizontalRadius,\n    top: hotSpotCenterY - hotSpotVerticalRadius,\n    right: hotSpotCenterX + hotSpotHorizontalRadius,\n    bottom: hotSpotCenterY + hotSpotVerticalRadius,\n  }\n\n  // If irrelevant, or if we are requested to: don't perform crop/fit based on\n  // the crop/hotspot.\n  if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {\n    spec = {...spec, ...fit({crop, hotspot}, spec)}\n  }\n\n  return specToImageUrl({...spec, asset})\n}\n\n// eslint-disable-next-line complexity\nfunction specToImageUrl(spec: ImageUrlBuilderOptionsWithAsset) {\n  const cdnUrl = (spec.baseUrl || 'https://cdn.sanity.io').replace(/\\/+$/, '')\n  const filename = `${spec.asset.id}-${spec.asset.width}x${spec.asset.height}.${spec.asset.format}`\n  const baseUrl = `${cdnUrl}/images/${spec.projectId}/${spec.dataset}/${filename}`\n\n  const params = []\n\n  if (spec.rect) {\n    // Only bother url with a crop if it actually crops anything\n    const {left, top, width, height} = spec.rect\n    const isEffectiveCrop =\n      left !== 0 || top !== 0 || height !== spec.asset.height || width !== spec.asset.width\n\n    if (isEffectiveCrop) {\n      params.push(`rect=${left},${top},${width},${height}`)\n    }\n  }\n\n  if (spec.bg) {\n    params.push(`bg=${spec.bg}`)\n  }\n\n  if (spec.focalPoint) {\n    params.push(`fp-x=${spec.focalPoint.x}`)\n    params.push(`fp-y=${spec.focalPoint.y}`)\n  }\n\n  const flip = [spec.flipHorizontal && 'h', spec.flipVertical && 'v'].filter(Boolean).join('')\n  if (flip) {\n    params.push(`flip=${flip}`)\n  }\n\n  // Map from spec name to url param name, and allow using the actual param name as an alternative\n  SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach((mapping) => {\n    const [specName, param] = mapping\n    if (typeof spec[specName] !== 'undefined') {\n      params.push(`${param}=${encodeURIComponent(spec[specName])}`)\n    } else if (typeof spec[param] !== 'undefined') {\n      params.push(`${param}=${encodeURIComponent(spec[param])}`)\n    }\n  })\n\n  if (params.length === 0) {\n    return baseUrl\n  }\n\n  return `${baseUrl}?${params.join('&')}`\n}\n\nfunction fit(\n  source: {crop: CropSpec; hotspot: HotspotSpec},\n  spec: ImageUrlBuilderOptions\n): SanityImageFitResult {\n  let cropRect: SanityImageRect\n\n  const imgWidth = spec.width\n  const imgHeight = spec.height\n\n  // If we are not constraining the aspect ratio, we'll just use the whole crop\n  if (!(imgWidth && imgHeight)) {\n    return {width: imgWidth, height: imgHeight, rect: source.crop}\n  }\n\n  const crop = source.crop\n  const hotspot = source.hotspot\n\n  // If we are here, that means aspect ratio is locked and fitting will be a bit harder\n  const desiredAspectRatio = imgWidth / imgHeight\n  const cropAspectRatio = crop.width / crop.height\n\n  if (cropAspectRatio > desiredAspectRatio) {\n    // The crop is wider than the desired aspect ratio. That means we are cutting from the sides\n    const height = Math.round(crop.height)\n    const width = Math.round(height * desiredAspectRatio)\n    const top = Math.max(0, Math.round(crop.top))\n\n    // Center output horizontally over hotspot\n    const hotspotXCenter = Math.round((hotspot.right - hotspot.left) / 2 + hotspot.left)\n    let left = Math.max(0, Math.round(hotspotXCenter - width / 2))\n\n    // Keep output within crop\n    if (left < crop.left) {\n      left = crop.left\n    } else if (left + width > crop.left + crop.width) {\n      left = crop.left + crop.width - width\n    }\n\n    cropRect = {left, top, width, height}\n  } else {\n    // The crop is taller than the desired ratio, we are cutting from top and bottom\n    const width = crop.width\n    const height = Math.round(width / desiredAspectRatio)\n    const left = Math.max(0, Math.round(crop.left))\n\n    // Center output vertically over hotspot\n    const hotspotYCenter = Math.round((hotspot.bottom - hotspot.top) / 2 + hotspot.top)\n    let top = Math.max(0, Math.round(hotspotYCenter - height / 2))\n\n    // Keep output rect within crop\n    if (top < crop.top) {\n      top = crop.top\n    } else if (top + height > crop.top + crop.height) {\n      top = crop.top + crop.height - height\n    }\n\n    cropRect = {left, top, width, height}\n  }\n\n  return {\n    width: imgWidth,\n    height: imgHeight,\n    rect: cropRect,\n  }\n}\n\n// For backwards-compatibility\nexport {parseSource}\n","import {\n  AutoMode,\n  CropMode,\n  FitMode,\n  ImageFormat,\n  ImageUrlBuilderOptions,\n  ImageUrlBuilderOptionsWithAliases,\n  SanityModernClientLike,\n  Orientation,\n  SanityClientLike,\n  SanityImageSource,\n  SanityProjectDetails,\n} from './types'\nimport urlForImage, {SPEC_NAME_TO_URL_NAME_MAPPINGS} from './urlForImage'\n\nconst validFits = ['clip', 'crop', 'fill', 'fillmax', 'max', 'scale', 'min']\nconst validCrops = ['top', 'bottom', 'left', 'right', 'center', 'focalpoint', 'entropy']\nconst validAutoModes = ['format']\n\nfunction isSanityModernClientLike(\n  client?: SanityClientLike | SanityProjectDetails | SanityModernClientLike\n): client is SanityModernClientLike {\n  return client && 'config' in client ? typeof client.config === 'function' : false\n}\n\nfunction isSanityClientLike(\n  client?: SanityClientLike | SanityProjectDetails | SanityModernClientLike\n): client is SanityClientLike {\n  return client && 'clientConfig' in client ? typeof client.clientConfig === 'object' : false\n}\n\nfunction rewriteSpecName(key: string) {\n  const specs = SPEC_NAME_TO_URL_NAME_MAPPINGS\n  for (const entry of specs) {\n    const [specName, param] = entry\n    if (key === specName || key === param) {\n      return specName\n    }\n  }\n\n  return key\n}\n\nexport default function urlBuilder(\n  options?: SanityClientLike | SanityProjectDetails | SanityModernClientLike\n) {\n  // Did we get a modernish client?\n  if (isSanityModernClientLike(options)) {\n    // Inherit config from client\n    const {apiHost: apiUrl, projectId, dataset} = options.config()\n    const apiHost = apiUrl || 'https://api.sanity.io'\n    return new ImageUrlBuilder(null, {\n      baseUrl: apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n      projectId,\n      dataset,\n    })\n  }\n\n  // Did we get a SanityClient?\n  const client = options as SanityClientLike\n  if (isSanityClientLike(client)) {\n    // Inherit config from client\n    const {apiHost: apiUrl, projectId, dataset} = client.clientConfig\n    const apiHost = apiUrl || 'https://api.sanity.io'\n    return new ImageUrlBuilder(null, {\n      baseUrl: apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n      projectId,\n      dataset,\n    })\n  }\n\n  // Or just accept the options as given\n  return new ImageUrlBuilder(null, options as ImageUrlBuilderOptions)\n}\n\nexport class ImageUrlBuilder {\n  public options: ImageUrlBuilderOptions\n\n  constructor(parent: ImageUrlBuilder | null, options: ImageUrlBuilderOptions) {\n    this.options = parent\n      ? {...(parent.options || {}), ...(options || {})} // Merge parent options\n      : {...(options || {})} // Copy options\n  }\n\n  withOptions(options: Partial<ImageUrlBuilderOptionsWithAliases>) {\n    const baseUrl = options.baseUrl || this.options.baseUrl\n\n    const newOptions: {[key: string]: any} = {baseUrl}\n    for (const key in options) {\n      if (options.hasOwnProperty(key)) {\n        const specKey = rewriteSpecName(key)\n        newOptions[specKey] = options[key]\n      }\n    }\n\n    return new ImageUrlBuilder(this, {baseUrl, ...newOptions})\n  }\n\n  // The image to be represented. Accepts a Sanity 'image'-document, 'asset'-document or\n  // _id of asset. To get the benefit of automatic hot-spot/crop integration with the content\n  // studio, the 'image'-document must be provided.\n  image(source: SanityImageSource) {\n    return this.withOptions({source})\n  }\n\n  // Specify the dataset\n  dataset(dataset: string) {\n    return this.withOptions({dataset})\n  }\n\n  // Specify the projectId\n  projectId(projectId: string) {\n    return this.withOptions({projectId})\n  }\n\n  // Specify background color\n  bg(bg: string) {\n    return this.withOptions({bg})\n  }\n\n  // Set DPR scaling factor\n  dpr(dpr: number) {\n    // A DPR of 1 is the default - so only include it if we have a different value\n    return this.withOptions(dpr && dpr !== 1 ? {dpr} : {})\n  }\n\n  // Specify the width of the image in pixels\n  width(width: number) {\n    return this.withOptions({width})\n  }\n\n  // Specify the height of the image in pixels\n  height(height: number) {\n    return this.withOptions({height})\n  }\n\n  // Specify focal point in fraction of image dimensions. Each component 0.0-1.0\n  focalPoint(x: number, y: number) {\n    return this.withOptions({focalPoint: {x, y}})\n  }\n\n  maxWidth(maxWidth: number) {\n    return this.withOptions({maxWidth})\n  }\n\n  minWidth(minWidth: number) {\n    return this.withOptions({minWidth})\n  }\n\n  maxHeight(maxHeight: number) {\n    return this.withOptions({maxHeight})\n  }\n\n  minHeight(minHeight: number) {\n    return this.withOptions({minHeight})\n  }\n\n  // Specify width and height in pixels\n  size(width: number, height: number) {\n    return this.withOptions({width, height})\n  }\n\n  // Specify blur between 0 and 100\n  blur(blur: number) {\n    return this.withOptions({blur})\n  }\n\n  sharpen(sharpen: number) {\n    return this.withOptions({sharpen})\n  }\n\n  // Specify the desired rectangle of the image\n  rect(left: number, top: number, width: number, height: number) {\n    return this.withOptions({rect: {left, top, width, height}})\n  }\n\n  // Specify the image format of the image. 'jpg', 'pjpg', 'png', 'webp'\n  format(format: ImageFormat) {\n    return this.withOptions({format})\n  }\n\n  invert(invert: boolean) {\n    return this.withOptions({invert})\n  }\n\n  // Rotation in degrees 0, 90, 180, 270\n  orientation(orientation: Orientation) {\n    return this.withOptions({orientation})\n  }\n\n  // Compression quality 0-100\n  quality(quality: number) {\n    return this.withOptions({quality})\n  }\n\n  // Make it a download link. Parameter is default filename.\n  forceDownload(download: boolean | string) {\n    return this.withOptions({download})\n  }\n\n  // Flip image horizontally\n  flipHorizontal() {\n    return this.withOptions({flipHorizontal: true})\n  }\n\n  // Flip image vertically\n  flipVertical() {\n    return this.withOptions({flipVertical: true})\n  }\n\n  // Ignore crop/hotspot from image record, even when present\n  ignoreImageParams() {\n    return this.withOptions({ignoreImageParams: true})\n  }\n\n  fit(value: FitMode) {\n    if (validFits.indexOf(value) === -1) {\n      throw new Error(`Invalid fit mode \"${value}\"`)\n    }\n\n    return this.withOptions({fit: value})\n  }\n\n  crop(value: CropMode) {\n    if (validCrops.indexOf(value) === -1) {\n      throw new Error(`Invalid crop mode \"${value}\"`)\n    }\n\n    return this.withOptions({crop: value})\n  }\n\n  // Saturation\n  saturation(saturation: number) {\n    return this.withOptions({saturation})\n  }\n\n  auto(value: AutoMode) {\n    if (validAutoModes.indexOf(value) === -1) {\n      throw new Error(`Invalid auto mode \"${value}\"`)\n    }\n\n    return this.withOptions({auto: value})\n  }\n\n  // Specify the number of pixels to pad the image\n  pad(pad: number) {\n    return this.withOptions({pad})\n  }\n\n  // Gets the url based on the submitted parameters\n  url() {\n    return urlForImage(this.options)\n  }\n\n  // Alias for url()\n  toString() {\n    return this.url()\n  }\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","var trim = function(string) {\n  return string.replace(/^\\s+|\\s+$/g, '');\n}\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  var headersArr = trim(headers).split('\\n')\n\n  for (var i = 0; i < headersArr.length; i++) {\n    var row = headersArr[i]\n    var index = row.indexOf(':')\n    , key = trim(row.slice(0, index)).toLowerCase()\n    , value = trim(row.slice(index + 1))\n\n    if (typeof(result[key]) === 'undefined') {\n      result[key] = value\n    } else if (isArray(result[key])) {\n      result[key].push(value)\n    } else {\n      result[key] = [ result[key], value ]\n    }\n  }\n\n  return result\n}\n","export var IconsManifest = [\n  {\n    \"id\": \"ci\",\n    \"name\": \"Circum Icons\",\n    \"projectUrl\": \"https://circumicons.com/\",\n    \"license\": \"MPL-2.0 license\",\n    \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome 5\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"hi2\",\n    \"name\": \"Heroicons 2\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"sl\",\n    \"name\": \"Simple Line Icons\",\n    \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"tb\",\n    \"name\": \"Tabler Icons\",\n    \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"tfi\",\n    \"name\": \"Themify Icons\",\n    \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n  },\n  {\n    \"id\": \"rx\",\n    \"name\": \"Radix Icons\",\n    \"projectUrl\": \"https://icons.radix-ui.com\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n  }\n]","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext\";\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\nexport function GenIcon(data) {\n  // eslint-disable-next-line react/display-name\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function (conf) {\n    var attr = props.attr,\n      size = props.size,\n      title = props.title,\n      svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","const isReactNative = typeof navigator === 'undefined' ? false : navigator.product === 'ReactNative'\n\nconst defaultOptions = {timeout: isReactNative ? 60000 : 120000}\n\n/** @public */\nexport function processOptions(opts: any): any {\n  const options =\n    typeof opts === 'string'\n      ? Object.assign({url: opts}, defaultOptions)\n      : Object.assign({}, defaultOptions, opts)\n\n  // Allow parsing relativ URLs by setting the origin\n  const url = new URL(options.url, 'http://localhost')\n\n  // Normalize timeouts\n  options.timeout = normalizeTimeout(options.timeout)\n\n  // Shallow-merge (override) existing query params\n  if (options.query) {\n    for (const [key, value] of Object.entries(options.query)) {\n      if (value !== undefined) {\n        if (Array.isArray(value)) {\n          for (const v of value) {\n            url.searchParams.append(key, v as string)\n          }\n        } else {\n          url.searchParams.append(key, value as string)\n        }\n      }\n    }\n  }\n\n  // Implicit POST if we have not specified a method but have a body\n  options.method =\n    options.body && !options.method ? 'POST' : (options.method || 'GET').toUpperCase()\n\n  // Stringify URL\n  options.url =\n    url.origin === 'http://localhost' ? `${url.pathname}?${url.searchParams}` : url.toString()\n\n  return options\n}\n\nfunction normalizeTimeout(time: any): any {\n  if (time === false || time === 0) {\n    return false\n  }\n\n  if (time.connect || time.socket) {\n    return time\n  }\n\n  const delay = Number(time)\n  if (isNaN(delay)) {\n    return normalizeTimeout(defaultOptions.timeout)\n  }\n\n  return {connect: delay, socket: delay}\n}\n","const validUrl = /^https?:\\/\\//i\n\n/** @public */\nexport function validateOptions(options: any): any {\n  if (!validUrl.test(options.url)) {\n    throw new Error(`\"${options.url}\" is not a valid URL`)\n  }\n}\n","import {processOptions} from './middleware/defaultOptionsProcessor'\nimport {validateOptions} from './middleware/defaultOptionsValidator'\nimport type {HttpRequest, Middleware, Middlewares, Requester} from './types'\nimport middlewareReducer from './util/middlewareReducer'\nimport {createPubSub} from './util/pubsub'\n\nconst channelNames = ['request', 'response', 'progress', 'error', 'abort']\nconst middlehooks = [\n  'processOptions',\n  'validateOptions',\n  'interceptRequest',\n  'finalizeOptions',\n  'onRequest',\n  'onResponse',\n  'onError',\n  'onReturn',\n  'onHeaders',\n]\n\n/** @public */\nexport function createRequester(initMiddleware: Middlewares, httpRequest: HttpRequest): Requester {\n  const loadedMiddleware: any[] = []\n  const middleware = middlehooks.reduce(\n    (ware: any, name: any) => {\n      ware[name] = ware[name] || []\n      return ware\n    },\n    {\n      processOptions: [processOptions],\n      validateOptions: [validateOptions],\n    }\n  )\n\n  function request(opts: any) {\n    const channels = channelNames.reduce((target: any, name: any): any => {\n      target[name] = createPubSub()\n      return target\n    }, {})\n\n    // Prepare a middleware reducer that can be reused throughout the lifecycle\n    const applyMiddleware = middlewareReducer(middleware)\n\n    // Parse the passed options\n    const options = applyMiddleware('processOptions', opts)\n\n    // Validate the options\n    applyMiddleware('validateOptions', options)\n\n    // Build a context object we can pass to child handlers\n    const context = {options, channels, applyMiddleware}\n\n    // We need to hold a reference to the current, ongoing request,\n    // in order to allow cancellation. In the case of the retry middleware,\n    // a new request might be triggered\n    let ongoingRequest: any = null\n    const unsubscribe = channels.request.subscribe((ctx: any) => {\n      // Let request adapters (node/browser) perform the actual request\n      ongoingRequest = httpRequest(ctx, (err: any, res: any) => onResponse(err, res, ctx))\n    })\n\n    // If we abort the request, prevent further requests from happening,\n    // and be sure to cancel any ongoing request (obviously)\n    channels.abort.subscribe(() => {\n      unsubscribe()\n      if (ongoingRequest) {\n        ongoingRequest.abort()\n      }\n    })\n\n    // See if any middleware wants to modify the return value - for instance\n    // the promise or observable middlewares\n    const returnValue = applyMiddleware('onReturn', channels, context)\n\n    // If return value has been modified by a middleware, we expect the middleware\n    // to publish on the 'request' channel. If it hasn't been modified, we want to\n    // trigger it right away\n    if (returnValue === channels) {\n      channels.request.publish(context)\n    }\n\n    return returnValue\n\n    function onResponse(reqErr: any, res: any, ctx: any) {\n      let error = reqErr\n      let response = res\n\n      // We're processing non-errors first, in case a middleware converts the\n      // response into an error (for instance, status >= 400 == HttpError)\n      if (!error) {\n        try {\n          response = applyMiddleware('onResponse', res, ctx)\n        } catch (err) {\n          response = null\n          error = err\n        }\n      }\n\n      // Apply error middleware - if middleware return the same (or a different) error,\n      // publish as an error event. If we *don't* return an error, assume it has been handled\n      error = error && applyMiddleware('onError', error, ctx)\n\n      // Figure out if we should publish on error/response channels\n      if (error) {\n        channels.error.publish(error)\n      } else if (response) {\n        channels.response.publish(response)\n      }\n    }\n  }\n\n  request.use = function use(newMiddleware: Middleware) {\n    if (!newMiddleware) {\n      throw new Error('Tried to add middleware that resolved to falsey value')\n    }\n\n    if (typeof newMiddleware === 'function') {\n      throw new Error(\n        'Tried to add middleware that was a function. It probably expects you to pass options to it.'\n      )\n    }\n\n    if (newMiddleware.onReturn && middleware.onReturn.length > 0) {\n      throw new Error(\n        'Tried to add new middleware with `onReturn` handler, but another handler has already been registered for this event'\n      )\n    }\n\n    middlehooks.forEach((key) => {\n      if (newMiddleware[key]) {\n        middleware[key].push(newMiddleware[key])\n      }\n    })\n\n    loadedMiddleware.push(newMiddleware)\n    return request\n  }\n\n  request.clone = function clone() {\n    return createRequester(loadedMiddleware, httpRequest)\n  }\n\n  initMiddleware.forEach(request.use)\n\n  return request\n}\n","// Code borrowed from https://github.com/bjoerge/nano-pubsub\n\nexport interface Subscriber<Event> {\n  (event: Event): void\n}\nexport interface PubSub<Message> {\n  publish: (message: Message) => void\n  subscribe: (subscriber: Subscriber<Message>) => () => void\n}\n\nexport function createPubSub<Message = void>(): PubSub<Message> {\n  const subscribers: {[id: string]: Subscriber<Message>} = Object.create(null)\n  let nextId = 0\n  function subscribe(subscriber: Subscriber<Message>) {\n    const id = nextId++\n    subscribers[id] = subscriber\n    return function unsubscribe() {\n      delete subscribers[id]\n    }\n  }\n\n  function publish(event: Message) {\n    for (const id in subscribers) {\n      subscribers[id](event)\n    }\n  }\n\n  return {\n    publish,\n    subscribe,\n  }\n}\n","export default (middleware: any) => {\n  const applyMiddleware = (hook: any, defaultValue: any, ...args: any[]) => {\n    const bailEarly = hook === 'onError'\n\n    let value = defaultValue\n    for (let i = 0; i < middleware[hook].length; i++) {\n      const handler = middleware[hook][i]\n      value = handler(value, ...args)\n\n      if (bailEarly && !value) {\n        break\n      }\n    }\n\n    return value\n  }\n\n  return applyMiddleware\n}\n","/**\n * Mimicks the XMLHttpRequest API with only the parts needed for get-it's XHR adapter\n */\nexport class FetchXhr\n  implements Pick<XMLHttpRequest, 'open' | 'abort' | 'getAllResponseHeaders' | 'setRequestHeader'>\n{\n  /**\n   * Public interface, interop with real XMLHttpRequest\n   */\n  onabort: () => void\n  onerror: (error?: any) => void\n  onreadystatechange: () => void\n  ontimeout: XMLHttpRequest['ontimeout']\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState\n   */\n  readyState: 0 | 1 | 2 | 3 | 4 = 0\n  response: XMLHttpRequest['response']\n  responseText: XMLHttpRequest['responseText']\n  responseType: XMLHttpRequest['responseType'] = ''\n  status: XMLHttpRequest['status']\n  statusText: XMLHttpRequest['statusText']\n  withCredentials: XMLHttpRequest['withCredentials']\n\n  /**\n   * Private implementation details\n   */\n  #method: string\n  #url: string\n  #resHeaders: string\n  #headers: Record<string, string> = {}\n  #controller?: AbortController\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- _async is only declared for typings compatibility\n  open(method: string, url: string, _async?: boolean) {\n    this.#method = method\n    this.#url = url\n    this.#resHeaders = ''\n    this.readyState = 1 // Open\n    this.onreadystatechange()\n    this.#controller = undefined\n  }\n  abort() {\n    if (this.#controller) {\n      this.#controller.abort()\n    }\n  }\n  getAllResponseHeaders() {\n    return this.#resHeaders\n  }\n  setRequestHeader(name: string, value: string) {\n    this.#headers[name] = value\n  }\n  send(body: BodyInit) {\n    const textBody = this.responseType !== 'arraybuffer'\n    const options: RequestInit = {\n      method: this.#method,\n      headers: this.#headers,\n      body,\n    }\n    if (typeof AbortController === 'function') {\n      this.#controller = new AbortController()\n      // The instanceof check ensures environments like Edge Runtime, Node 18 with built-in fetch\n      // and more don't throw if `signal` doesn't implement`EventTarget`\n      // Native browser AbortSignal implements EventTarget, so we can use it\n      if (typeof EventTarget !== 'undefined' && this.#controller.signal instanceof EventTarget) {\n        options.signal = this.#controller.signal\n      }\n    }\n\n    // Some environments (like CloudFlare workers) don't support credentials in\n    // RequestInitDict, and there doesn't seem to be any easy way to check for it,\n    // so for now let's just make do with a document check :/\n    if (typeof document !== 'undefined') {\n      options.credentials = this.withCredentials ? 'include' : 'omit'\n    }\n\n    fetch(this.#url, options)\n      .then((res): Promise<string | ArrayBuffer> => {\n        res.headers.forEach((value: any, key: any) => {\n          this.#resHeaders += `${key}: ${value}\\r\\n`\n        })\n        this.status = res.status\n        this.statusText = res.statusText\n        this.readyState = 3 // Loading\n        return textBody ? res.text() : res.arrayBuffer()\n      })\n      .then((resBody) => {\n        if (typeof resBody === 'string') {\n          this.responseText = resBody\n        } else {\n          this.response = resBody\n        }\n        this.readyState = 4 // Done\n        this.onreadystatechange()\n      })\n      .catch((err: Error) => {\n        if (err.name === 'AbortError') {\n          this.onabort()\n          return\n        }\n\n        this.onerror?.(err)\n      })\n  }\n}\n","import parseHeaders from 'parse-headers'\n\nimport type {RequestAdapter} from '../types'\nimport {FetchXhr} from './browser/fetchXhr'\n\n// Use fetch if it's available, non-browser environments such as Deno, Edge Runtime and more provide fetch as a global but doesn't provide xhr\nexport const adapter: RequestAdapter = typeof XMLHttpRequest === 'function' ? 'xhr' : 'fetch'\n\n// Fallback to fetch-based XHR polyfill for non-browser environments like Workers\nconst XmlHttpRequest = adapter === 'xhr' ? XMLHttpRequest : FetchXhr\n\nexport default (context: any, callback: any) => {\n  const opts = context.options\n  const options = context.applyMiddleware('finalizeOptions', opts)\n  const timers: any = {}\n\n  // Allow middleware to inject a response, for instance in the case of caching or mocking\n  const injectedResponse = context.applyMiddleware('interceptRequest', undefined, {\n    adapter,\n    context,\n  })\n\n  // If middleware injected a response, treat it as we normally would and return it\n  // Do note that the injected response has to be reduced to a cross-environment friendly response\n  if (injectedResponse) {\n    const cbTimer = setTimeout(callback, 0, null, injectedResponse)\n    const cancel = () => clearTimeout(cbTimer)\n    return {abort: cancel}\n  }\n\n  // We'll want to null out the request on success/failure\n  let xhr = new XmlHttpRequest()\n\n  const headers = options.headers\n  const delays = options.timeout\n\n  // Request state\n  let aborted = false\n  let loaded = false\n  let timedOut = false\n\n  // Apply event handlers\n  xhr.onerror = onError\n  xhr.ontimeout = onError\n  xhr.onabort = () => {\n    stopTimers(true)\n    aborted = true\n  }\n\n  xhr.onreadystatechange = () => {\n    // Prevent request from timing out\n    resetTimers()\n\n    if (aborted || xhr.readyState !== 4) {\n      return\n    }\n\n    // Will be handled by onError\n    if (xhr.status === 0) {\n      return\n    }\n\n    onLoad()\n  }\n\n  // @todo two last options to open() is username/password\n  xhr.open(\n    options.method,\n    options.url,\n    true // Always async\n  )\n\n  // Some options need to be applied after open\n  xhr.withCredentials = !!options.withCredentials\n\n  // Set headers\n  if (headers && xhr.setRequestHeader) {\n    for (const key in headers) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key])\n      }\n    }\n  }\n\n  if (options.rawBody) {\n    xhr.responseType = 'arraybuffer'\n  }\n\n  // Let middleware know we're about to do a request\n  context.applyMiddleware('onRequest', {options, adapter, request: xhr, context})\n\n  xhr.send(options.body || null)\n\n  // Figure out which timeouts to use (if any)\n  if (delays) {\n    timers.connect = setTimeout(() => timeoutRequest('ETIMEDOUT'), delays.connect)\n  }\n\n  return {abort}\n\n  function abort() {\n    aborted = true\n\n    if (xhr) {\n      xhr.abort()\n    }\n  }\n\n  function timeoutRequest(code: any) {\n    timedOut = true\n    xhr.abort()\n    const error: any = new Error(\n      code === 'ESOCKETTIMEDOUT'\n        ? `Socket timed out on request to ${options.url}`\n        : `Connection timed out on request to ${options.url}`\n    )\n    error.code = code\n    context.channels.error.publish(error)\n  }\n\n  function resetTimers() {\n    if (!delays) {\n      return\n    }\n\n    stopTimers()\n    timers.socket = setTimeout(() => timeoutRequest('ESOCKETTIMEDOUT'), delays.socket)\n  }\n\n  function stopTimers(force?: boolean) {\n    // Only clear the connect timeout if we've got a connection\n    if (force || aborted || (xhr.readyState >= 2 && timers.connect)) {\n      clearTimeout(timers.connect)\n    }\n\n    if (timers.socket) {\n      clearTimeout(timers.socket)\n    }\n  }\n\n  function onError(error?: any) {\n    if (loaded) {\n      return\n    }\n\n    // Clean up\n    stopTimers(true)\n    loaded = true\n    ;(xhr as any) = null\n\n    // Annoyingly, details are extremely scarce and hidden from us.\n    // We only really know that it is a network error\n    const err = error || new Error(`Network error while attempting to reach ${options.url}`)\n    err.isNetworkError = true\n    err.request = options\n    callback(err)\n  }\n\n  function reduceResponse() {\n    return {\n      body:\n        xhr.response ||\n        (xhr.responseType === '' || xhr.responseType === 'text' ? xhr.responseText : ''),\n      url: options.url,\n      method: options.method,\n      headers: parseHeaders(xhr.getAllResponseHeaders()),\n      statusCode: xhr.status,\n      statusMessage: xhr.statusText,\n    }\n  }\n\n  function onLoad() {\n    if (aborted || loaded || timedOut) {\n      return\n    }\n\n    if (xhr.status === 0) {\n      onError(new Error('Unknown XHR error'))\n      return\n    }\n\n    // Prevent being called twice\n    stopTimers()\n    loaded = true\n    callback(null, reduceResponse())\n  }\n}\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexport { isPlainObject };\n","import debugIt from 'debug'\n\nconst SENSITIVE_HEADERS = ['cookie', 'authorization']\n\nconst hasOwn = Object.prototype.hasOwnProperty\nconst redactKeys = (source: any, redacted: any) => {\n  const target: any = {}\n  for (const key in source) {\n    if (hasOwn.call(source, key)) {\n      target[key] = redacted.indexOf(key.toLowerCase()) > -1 ? '<redacted>' : source[key]\n    }\n  }\n  return target\n}\n\n/** @public */\nexport function debug(opts: any = {}): any {\n  const verbose = opts.verbose\n  const namespace = opts.namespace || 'get-it'\n  const defaultLogger = debugIt(namespace)\n  const log = opts.log || defaultLogger\n  const shortCircuit = log === defaultLogger && !debugIt.enabled(namespace)\n  let requestId = 0\n\n  return {\n    processOptions: (options: any) => {\n      options.debug = log\n      options.requestId = options.requestId || ++requestId\n      return options\n    },\n\n    onRequest: (event: any) => {\n      // Short-circuit if not enabled, to save some CPU cycles with formatting stuff\n      if (shortCircuit || !event) {\n        return event\n      }\n\n      const options = event.options\n\n      log('[%s] HTTP %s %s', options.requestId, options.method, options.url)\n\n      if (verbose && options.body && typeof options.body === 'string') {\n        log('[%s] Request body: %s', options.requestId, options.body)\n      }\n\n      if (verbose && options.headers) {\n        const headers =\n          opts.redactSensitiveHeaders === false\n            ? options.headers\n            : redactKeys(options.headers, SENSITIVE_HEADERS)\n\n        log('[%s] Request headers: %s', options.requestId, JSON.stringify(headers, null, 2))\n      }\n\n      return event\n    },\n\n    onResponse: (res: any, context: any) => {\n      // Short-circuit if not enabled, to save some CPU cycles with formatting stuff\n      if (shortCircuit || !res) {\n        return res\n      }\n\n      const reqId = context.options.requestId\n\n      log('[%s] Response code: %s %s', reqId, res.statusCode, res.statusMessage)\n\n      if (verbose && res.body) {\n        log('[%s] Response body: %s', reqId, stringifyBody(res))\n      }\n\n      return res\n    },\n\n    onError: (err: any, context: any) => {\n      const reqId = context.options.requestId\n      if (!err) {\n        log('[%s] Error encountered, but handled by an earlier middleware', reqId)\n        return err\n      }\n\n      log('[%s] ERROR: %s', reqId, err.message)\n      return err\n    },\n  }\n}\n\nfunction stringifyBody(res: any) {\n  const contentType = (res.headers['content-type'] || '').toLowerCase()\n  const isJson = contentType.indexOf('application/json') !== -1\n  return isJson ? tryFormat(res.body) : res.body\n}\n\n// Attempt pretty-formatting JSON\nfunction tryFormat(body: any) {\n  try {\n    const parsed = typeof body === 'string' ? JSON.parse(body) : body\n    return JSON.stringify(parsed, null, 2)\n  } catch (err) {\n    return body\n  }\n}\n","class HttpError extends Error {\n  response: any\n  request: any\n  constructor(res: any, ctx: any) {\n    super()\n    const truncatedUrl = res.url.length > 400 ? `${res.url.slice(0, 399)}…` : res.url\n    let msg = `${res.method}-request to ${truncatedUrl} resulted in `\n    msg += `HTTP ${res.statusCode} ${res.statusMessage}`\n\n    this.message = msg.trim()\n    this.response = res\n    this.request = ctx.options\n  }\n}\n\n/** @public */\nexport function httpErrors() {\n  return {\n    onResponse: (res: any, ctx: any) => {\n      const isHttpError = res.statusCode >= 400\n      if (!isHttpError) {\n        return res\n      }\n\n      throw new HttpError(res, ctx)\n    },\n  }\n}\n","export const isBuffer =\n  typeof Buffer === 'undefined' ? () => false : (obj: unknown) => Buffer.isBuffer(obj)\n","import {isPlainObject} from 'is-plain-object'\n\nimport {isBuffer} from '../util/isBuffer'\n\nconst serializeTypes = ['boolean', 'string', 'number']\n\n/** @public */\nexport function jsonRequest() {\n  return {\n    processOptions: (options: any) => {\n      const body = options.body\n      if (!body) {\n        return options\n      }\n\n      const isStream = typeof body.pipe === 'function'\n      const shouldSerialize =\n        !isStream &&\n        !isBuffer(body) &&\n        (serializeTypes.indexOf(typeof body) !== -1 || Array.isArray(body) || isPlainObject(body))\n\n      if (!shouldSerialize) {\n        return options\n      }\n\n      return Object.assign({}, options, {\n        body: JSON.stringify(options.body),\n        headers: Object.assign({}, options.headers, {\n          'Content-Type': 'application/json',\n        }),\n      })\n    },\n  }\n}\n","/** @public */\nexport function jsonResponse(opts?: any) {\n  return {\n    onResponse: (response: any) => {\n      const contentType = response.headers['content-type'] || ''\n      const shouldDecode = (opts && opts.force) || contentType.indexOf('application/json') !== -1\n      if (!response.body || !contentType || !shouldDecode) {\n        return response\n      }\n\n      return Object.assign({}, response, {body: tryParse(response.body)})\n    },\n\n    processOptions: (options: any) =>\n      Object.assign({}, options, {\n        headers: Object.assign({Accept: 'application/json'}, options.headers),\n      }),\n  }\n\n  function tryParse(body: any) {\n    try {\n      return JSON.parse(body)\n    } catch (err: any) {\n      err.message = `Failed to parsed response body as JSON: ${err.message}`\n      throw err\n    }\n  }\n}\n","let actualGlobal: any\n\nif (typeof globalThis !== 'undefined') {\n  actualGlobal = globalThis\n} else if (typeof window !== 'undefined') {\n  actualGlobal = window\n} else if (typeof global !== 'undefined') {\n  actualGlobal = global\n} else if (typeof self !== 'undefined') {\n  actualGlobal = self\n} else {\n  actualGlobal = {} as any\n}\n\nexport default actualGlobal\n","import global from '../util/global'\n\n/** @public */\nexport function observable(opts: any = {}) {\n  const Observable = opts.implementation || global.Observable\n  if (!Observable) {\n    throw new Error(\n      '`Observable` is not available in global scope, and no implementation was passed'\n    )\n  }\n\n  return {\n    onReturn: (channels: any, context: any) =>\n      new Observable((observer: any) => {\n        channels.error.subscribe((err: any) => observer.error(err))\n        channels.progress.subscribe((event: any) =>\n          observer.next(Object.assign({type: 'progress'}, event))\n        )\n        channels.response.subscribe((response: any) => {\n          observer.next(Object.assign({type: 'response'}, response))\n          observer.complete()\n        })\n\n        channels.request.publish(context)\n        return () => channels.abort.publish()\n      }),\n  }\n}\n","/** @public */\nexport const promise = (options: any = {}) => {\n  const PromiseImplementation = options.implementation || Promise\n  if (!PromiseImplementation) {\n    throw new Error('`Promise` is not available in global scope, and no implementation was passed')\n  }\n\n  return {\n    onReturn: (channels: any, context: any) =>\n      new PromiseImplementation((resolve: any, reject: any) => {\n        const cancel = context.options.cancelToken\n        if (cancel) {\n          cancel.promise.then((reason: any) => {\n            channels.abort.publish(reason)\n            reject(reason)\n          })\n        }\n\n        channels.error.subscribe(reject)\n        channels.response.subscribe((response: any) => {\n          resolve(options.onlyBody ? response.body : response)\n        })\n\n        // Wait until next tick in case cancel has been performed\n        setTimeout(() => {\n          try {\n            channels.request.publish(context)\n          } catch (err) {\n            reject(err)\n          }\n        }, 0)\n      }),\n  }\n}\n\n/**\n * The cancel token API is based on the [cancelable promises proposal](https://github.com/tc39/proposal-cancelable-promises), which is currently at Stage 1.\n *\n * Code shamelessly stolen/borrowed from MIT-licensed [axios](https://github.com/mzabriskie/axios). Thanks to [Nick Uraltsev](https://github.com/nickuraltsev), [Matt Zabriskie](https://github.com/mzabriskie) and the other contributors of that project!\n */\n/** @public */\nexport class Cancel {\n  __CANCEL__ = true\n\n  message: string | undefined\n\n  constructor(message: string | undefined) {\n    this.message = message\n  }\n\n  toString() {\n    return `Cancel${this.message ? `: ${this.message}` : ''}`\n  }\n}\n\n/** @public */\nexport class CancelToken {\n  promise: Promise<any>\n  reason?: Cancel\n\n  constructor(executor: (cb: (message?: string) => void) => void) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.')\n    }\n\n    let resolvePromise: any = null\n\n    this.promise = new Promise((resolve) => {\n      resolvePromise = resolve\n    })\n\n    executor((message?: string) => {\n      if (this.reason) {\n        // Cancellation has already been requested\n        return\n      }\n\n      this.reason = new Cancel(message)\n      resolvePromise(this.reason)\n    })\n  }\n\n  static source = () => {\n    let cancel: (message?: string) => void\n    const token = new CancelToken((can) => {\n      cancel = can\n    })\n\n    return {\n      token: token,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- we know from the implementation that it's assigned during `constructor`\n      cancel: cancel!,\n    }\n  }\n}\n\nconst isCancel = (value: any): value is Cancel => !!(value && value?.__CANCEL__)\n\npromise.Cancel = Cancel\npromise.CancelToken = CancelToken\npromise.isCancel = isCancel\n","export default (err: any, attempt: any, options: any) => {\n  if (options.method !== 'GET' && options.method !== 'HEAD') {\n    return false\n  }\n\n  return err.isNetworkError || false\n}\n","import type {RetryOptions} from '../../types'\n\nconst isStream = (stream: any) =>\n  stream !== null && typeof stream === 'object' && typeof stream.pipe === 'function'\n\n/** @public */\nexport default (opts: RetryOptions): any => {\n  const maxRetries = opts.maxRetries || 5\n  const retryDelay = opts.retryDelay || getRetryDelay\n  const allowRetry = opts.shouldRetry\n\n  return {\n    onError: (err: any, context: any) => {\n      const options = context.options\n      const max = options.maxRetries || maxRetries\n      const shouldRetry = options.shouldRetry || allowRetry\n      const attemptNumber = options.attemptNumber || 0\n\n      // We can't retry if body is a stream, since it'll be drained\n      if (isStream(options.body)) {\n        return err\n      }\n\n      // Give up?\n      if (!shouldRetry(err, attemptNumber, options) || attemptNumber >= max) {\n        return err\n      }\n\n      // Create a new context with an increased attempt number, so we can exit if we reach a limit\n      const newContext = Object.assign({}, context, {\n        options: Object.assign({}, options, {attemptNumber: attemptNumber + 1}),\n      })\n\n      // Wait a given amount of time before doing the request again\n      setTimeout(() => context.channels.request.publish(newContext), retryDelay(attemptNumber))\n\n      // Signal that we've handled the error and that it should not propagate further\n      return null\n    },\n  }\n}\n\nfunction getRetryDelay(attemptNum: number) {\n  return 100 * Math.pow(2, attemptNum) + Math.random() * 100\n}\n","import type {RetryOptions} from '../../types'\nimport defaultShouldRetry from '../../util/browser-shouldRetry'\nimport sharedRetry from './shared-retry'\n\n/** @public */\nexport const retry = (opts: Partial<RetryOptions> = {}): any =>\n  sharedRetry({shouldRetry: defaultShouldRetry, ...opts})\n\nretry.shouldRetry = defaultShouldRetry\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n","import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\n\nexport interface LastValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function lastValueFrom<T, D>(source: Observable<T>, config: LastValueFromConfig<D>): Promise<T | D>;\nexport function lastValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * waiting for it to complete, and resolving the returned promise with the\n * last value from the observed stream.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will complete. If the source\n * observable does not complete, you will end up with a promise that is hung up, and\n * potentially all of the state of an async function hanging out in memory. To avoid\n * this situation, look into adding something like {@link timeout}, {@link take},\n * {@link takeWhile}, or {@link takeUntil} amongst others.\n *\n * ## Example\n *\n * Wait for the last value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, take, lastValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000).pipe(take(10));\n *   const finalNumber = await lastValueFrom(source$);\n *   console.log(`The final number is ${ finalNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The final number is 9'\n * ```\n *\n * @see {@link firstValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function lastValueFrom<T, D>(source: Observable<T>, config?: LastValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    let _hasValue = false;\n    let _value: T;\n    source.subscribe({\n      next: (value) => {\n        _value = value;\n        _hasValue = true;\n      },\n      error: reject,\n      complete: () => {\n        if (_hasValue) {\n          resolve(_value);\n        } else if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n","import type {Any, ErrorProps, MutationError} from '../types'\n\nconst MAX_ITEMS_IN_ERROR_MESSAGE = 5\n\n/** @public */\nexport class ClientError extends Error {\n  response: ErrorProps['response']\n  statusCode: ErrorProps['statusCode'] = 400\n  responseBody: ErrorProps['responseBody']\n  details: ErrorProps['details']\n\n  constructor(res: Any) {\n    const props = extractErrorProps(res)\n    super(props.message)\n    Object.assign(this, props)\n  }\n}\n\n/** @public */\nexport class ServerError extends Error {\n  response: ErrorProps['response']\n  statusCode: ErrorProps['statusCode'] = 500\n  responseBody: ErrorProps['responseBody']\n  details: ErrorProps['details']\n\n  constructor(res: Any) {\n    const props = extractErrorProps(res)\n    super(props.message)\n    Object.assign(this, props)\n  }\n}\n\nfunction extractErrorProps(res: Any): ErrorProps {\n  const body = res.body\n  const props = {\n    response: res,\n    statusCode: res.statusCode,\n    responseBody: stringifyBody(body, res),\n    message: '',\n    details: undefined as Any,\n  }\n\n  // API/Boom style errors ({statusCode, error, message})\n  if (body.error && body.message) {\n    props.message = `${body.error} - ${body.message}`\n    return props\n  }\n\n  // Mutation errors (specifically)\n  if (isMutationError(body)) {\n    const allItems = body.error.items || []\n    const items = allItems\n      .slice(0, MAX_ITEMS_IN_ERROR_MESSAGE)\n      .map((item) => item.error?.description)\n      .filter(Boolean)\n    let itemsStr = items.length ? `:\\n- ${items.join('\\n- ')}` : ''\n    if (allItems.length > MAX_ITEMS_IN_ERROR_MESSAGE) {\n      itemsStr += `\\n...and ${allItems.length - MAX_ITEMS_IN_ERROR_MESSAGE} more`\n    }\n    props.message = `${body.error.description}${itemsStr}`\n    props.details = body.error\n    return props\n  }\n\n  // Query/database errors ({error: {description, other, arb, props}})\n  if (body.error && body.error.description) {\n    props.message = body.error.description\n    props.details = body.error\n    return props\n  }\n\n  // Other, more arbitrary errors\n  props.message = body.error || body.message || httpErrorMessage(res)\n  return props\n}\n\nfunction isMutationError(body: Any): body is MutationError {\n  return (\n    isPlainObject(body) &&\n    isPlainObject(body.error) &&\n    body.error.type === 'mutationError' &&\n    typeof body.error.description === 'string'\n  )\n}\n\nfunction isPlainObject(obj: Any): obj is Record<string, unknown> {\n  return typeof obj === 'object' && obj !== null && !Array.isArray(obj)\n}\n\nfunction httpErrorMessage(res: Any) {\n  const statusMessage = res.statusMessage ? ` ${res.statusMessage}` : ''\n  return `${res.method}-request to ${res.url} resulted in HTTP ${res.statusCode}${statusMessage}`\n}\n\nfunction stringifyBody(body: Any, res: Any) {\n  const contentType = (res.headers['content-type'] || '').toLowerCase()\n  const isJson = contentType.indexOf('application/json') !== -1\n  return isJson ? JSON.stringify(body, null, 2) : body\n}\n","import {getIt, type Middlewares} from 'get-it'\nimport {jsonRequest, jsonResponse, observable, progress} from 'get-it/middleware'\nimport {Observable} from 'rxjs'\n\nimport type {Any, HttpRequest, RequestOptions} from '../types'\nimport {ClientError, ServerError} from './errors'\n\nconst httpError = {\n  onResponse: (res: Any) => {\n    if (res.statusCode >= 500) {\n      throw new ServerError(res)\n    } else if (res.statusCode >= 400) {\n      throw new ClientError(res)\n    }\n\n    return res\n  },\n}\n\nconst printWarnings = {\n  onResponse: (res: Any) => {\n    const warn = res.headers['x-sanity-warning']\n    const warnings = Array.isArray(warn) ? warn : [warn]\n    warnings.filter(Boolean).forEach((msg) => console.warn(msg)) // eslint-disable-line no-console\n    return res\n  },\n}\n\n/** @internal */\nexport function defineHttpRequest(envMiddleware: Middlewares): HttpRequest {\n  const request = getIt([\n    ...envMiddleware,\n    printWarnings,\n    jsonRequest(),\n    jsonResponse(),\n    progress(),\n    httpError,\n    observable({implementation: Observable}),\n  ])\n\n  function httpRequest(options: RequestOptions, requester = request) {\n    return requester({maxRedirects: 0, ...options} as Any)\n  }\n\n  httpRequest.defaultRequester = request\n\n  return httpRequest\n}\n","import type {RequestOptions} from 'get-it'\n\nimport type {Any} from '../types'\n\nconst projectHeader = 'X-Sanity-Project-ID'\n\nexport function requestOptions(config: Any, overrides: Any = {}): Omit<RequestOptions, 'url'> {\n  const headers: Any = {}\n\n  const token = overrides.token || config.token\n  if (token) {\n    headers.Authorization = `Bearer ${token}`\n  }\n\n  if (!overrides.useGlobalApi && !config.useProjectHostname && config.projectId) {\n    headers[projectHeader] = config.projectId\n  }\n\n  const withCredentials = Boolean(\n    typeof overrides.withCredentials === 'undefined'\n      ? config.token || config.withCredentials\n      : overrides.withCredentials\n  )\n\n  const timeout = typeof overrides.timeout === 'undefined' ? config.timeout : overrides.timeout\n  return Object.assign({}, overrides, {\n    headers: Object.assign({}, headers, overrides.headers || {}),\n    timeout: typeof timeout === 'undefined' ? 5 * 60 * 1000 : timeout,\n    proxy: overrides.proxy || config.proxy,\n    json: true,\n    withCredentials,\n  })\n}\n","import type {MutationSelection} from '../types'\n\nexport function getSelection(sel: unknown): MutationSelection {\n  if (typeof sel === 'string' || Array.isArray(sel)) {\n    return {id: sel}\n  }\n\n  if (typeof sel === 'object' && sel !== null && 'query' in sel && typeof sel.query === 'string') {\n    return 'params' in sel && typeof sel.params === 'object' && sel.params !== null\n      ? {query: sel.query, params: sel.params}\n      : {query: sel.query}\n  }\n\n  const selectionOpts = [\n    '* Document ID (<docId>)',\n    '* Array of document IDs',\n    '* Object containing `query`',\n  ].join('\\n')\n\n  throw new Error(`Unknown selection - must be one of:\\n\\n${selectionOpts}`)\n}\n","import type {Any, InitializedClientConfig} from './types'\n\nconst VALID_ASSET_TYPES = ['image', 'file']\nconst VALID_INSERT_LOCATIONS = ['before', 'after', 'replace']\n\nexport const dataset = (name: string) => {\n  if (!/^(~[a-z0-9]{1}[-\\w]{0,63}|[a-z0-9]{1}[-\\w]{0,63})$/.test(name)) {\n    throw new Error(\n      'Datasets can only contain lowercase characters, numbers, underscores and dashes, and start with tilde, and be maximum 64 characters'\n    )\n  }\n}\n\nexport const projectId = (id: string) => {\n  if (!/^[-a-z0-9]+$/i.test(id)) {\n    throw new Error('`projectId` can only contain only a-z, 0-9 and dashes')\n  }\n}\n\nexport const validateAssetType = (type: string) => {\n  if (VALID_ASSET_TYPES.indexOf(type) === -1) {\n    throw new Error(`Invalid asset type: ${type}. Must be one of ${VALID_ASSET_TYPES.join(', ')}`)\n  }\n}\n\nexport const validateObject = (op: string, val: Any) => {\n  if (val === null || typeof val !== 'object' || Array.isArray(val)) {\n    throw new Error(`${op}() takes an object of properties`)\n  }\n}\n\nexport const validateDocumentId = (op: string, id: string) => {\n  if (typeof id !== 'string' || !/^[a-z0-9_][a-z0-9_.-]{0,127}$/i.test(id) || id.includes('..')) {\n    throw new Error(`${op}(): \"${id}\" is not a valid document ID`)\n  }\n}\n\nexport const requireDocumentId = (op: string, doc: Record<string, Any>) => {\n  if (!doc._id) {\n    throw new Error(`${op}() requires that the document contains an ID (\"_id\" property)`)\n  }\n\n  validateDocumentId(op, doc._id)\n}\n\nexport const validateInsert = (at: string, selector: string, items: Any[]) => {\n  const signature = 'insert(at, selector, items)'\n  if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {\n    const valid = VALID_INSERT_LOCATIONS.map((loc) => `\"${loc}\"`).join(', ')\n    throw new Error(`${signature} takes an \"at\"-argument which is one of: ${valid}`)\n  }\n\n  if (typeof selector !== 'string') {\n    throw new Error(`${signature} takes a \"selector\"-argument which must be a string`)\n  }\n\n  if (!Array.isArray(items)) {\n    throw new Error(`${signature} takes an \"items\"-argument which must be an array`)\n  }\n}\n\nexport const hasDataset = (config: InitializedClientConfig): string => {\n  if (!config.dataset) {\n    throw new Error('`dataset` must be provided to perform queries')\n  }\n\n  return config.dataset || ''\n}\n\nexport const requestTag = (tag: string) => {\n  if (typeof tag !== 'string' || !/^[a-z0-9._-]{1,75}$/i.test(tag)) {\n    throw new Error(\n      `Tag can only contain alphanumeric characters, underscores, dashes and dots, and be between one and 75 characters long.`\n    )\n  }\n\n  return tag\n}\n","import {type Observable} from 'rxjs'\n\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {\n  AllDocumentIdsMutationOptions,\n  AllDocumentsMutationOptions,\n  Any,\n  AttributeSet,\n  BaseMutationOptions,\n  FirstDocumentIdMutationOptions,\n  FirstDocumentMutationOptions,\n  MultipleMutationResult,\n  PatchMutationOperation,\n  PatchOperations,\n  PatchSelection,\n  SanityDocument,\n  SingleMutationResult,\n} from '../types'\nimport {getSelection} from '../util/getSelection'\nimport {validateInsert, validateObject} from '../validators'\n\n/** @internal */\nexport class BasePatch {\n  protected selection: PatchSelection\n  protected operations: PatchOperations\n  constructor(selection: PatchSelection, operations: PatchOperations = {}) {\n    this.selection = selection\n    this.operations = operations\n  }\n\n  /**\n   * Sets the given attributes to the document. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  set(attrs: AttributeSet): this {\n    return this._assign('set', attrs)\n  }\n\n  /**\n   * Sets the given attributes to the document if they are not currently set. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  setIfMissing(attrs: AttributeSet): this {\n    return this._assign('setIfMissing', attrs)\n  }\n\n  /**\n   * Performs a \"diff-match-patch\" operation on the string attributes provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to perform operation on. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"dmp\"\\}\n   */\n  diffMatchPatch(attrs: AttributeSet): this {\n    validateObject('diffMatchPatch', attrs)\n    return this._assign('diffMatchPatch', attrs)\n  }\n\n  /**\n   * Unsets the attribute paths provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attribute paths to unset.\n   */\n  unset(attrs: string[]): this {\n    if (!Array.isArray(attrs)) {\n      throw new Error('unset(attrs) takes an array of attributes to unset, non-array given')\n    }\n\n    this.operations = Object.assign({}, this.operations, {unset: attrs})\n    return this\n  }\n\n  /**\n   * Increment a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to increment, values representing the number to increment by.\n   */\n  inc(attrs: {[key: string]: number}): this {\n    return this._assign('inc', attrs)\n  }\n\n  /**\n   * Decrement a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to decrement, values representing the number to decrement by.\n   */\n  dec(attrs: {[key: string]: number}): this {\n    return this._assign('dec', attrs)\n  }\n\n  /**\n   * Provides methods for modifying arrays, by inserting, appending and replacing elements via a JSONPath expression.\n   *\n   * @param at - Location to insert at, relative to the given selector, or 'replace' the matched path\n   * @param selector - JSONPath expression, eg `comments[-1]` or `blocks[_key==\"abc123\"]`\n   * @param items - Array of items to insert/replace\n   */\n  insert(at: 'before' | 'after' | 'replace', selector: string, items: Any[]): this {\n    validateInsert(at, selector, items)\n    return this._assign('insert', {[at]: selector, items})\n  }\n\n  /**\n   * Append the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to append to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to append to the array\n   */\n  append(selector: string, items: Any[]): this {\n    return this.insert('after', `${selector}[-1]`, items)\n  }\n\n  /**\n   * Prepend the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to prepend to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to prepend to the array\n   */\n  prepend(selector: string, items: Any[]): this {\n    return this.insert('before', `${selector}[0]`, items)\n  }\n\n  /**\n   * Change the contents of an array by removing existing elements and/or adding new elements.\n   *\n   * @param selector - Attribute or JSONPath expression for array\n   * @param start - Index at which to start changing the array (with origin 0). If greater than the length of the array, actual starting index will be set to the length of the array. If negative, will begin that many elements from the end of the array (with origin -1) and will be set to 0 if absolute value is greater than the length of the array.x\n   * @param deleteCount - An integer indicating the number of old array elements to remove.\n   * @param items - The elements to add to the array, beginning at the start index. If you don't specify any elements, splice() will only remove elements from the array.\n   */\n  splice(selector: string, start: number, deleteCount?: number, items?: Any[]): this {\n    // Negative indexes doesn't mean the same in Sanity as they do in JS;\n    // -1 means \"actually at the end of the array\", which allows inserting\n    // at the end of the array without knowing its length. We therefore have\n    // to substract negative indexes by one to match JS. If you want Sanity-\n    // behaviour, just use `insert('replace', selector, items)` directly\n    const delAll = typeof deleteCount === 'undefined' || deleteCount === -1\n    const startIndex = start < 0 ? start - 1 : start\n    const delCount = delAll ? -1 : Math.max(0, start + deleteCount)\n    const delRange = startIndex < 0 && delCount >= 0 ? '' : delCount\n    const rangeSelector = `${selector}[${startIndex}:${delRange}]`\n    return this.insert('replace', rangeSelector, items || [])\n  }\n\n  /**\n   * Adds a revision clause, preventing the document from being patched if the `_rev` property does not match the given value\n   *\n   * @param rev - Revision to lock the patch to\n   */\n  ifRevisionId(rev: string): this {\n    this.operations.ifRevisionID = rev\n    return this\n  }\n\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  serialize(): PatchMutationOperation {\n    return {...getSelection(this.selection), ...this.operations}\n  }\n\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  toJSON(): PatchMutationOperation {\n    return this.serialize()\n  }\n\n  /**\n   * Clears the patch of all operations\n   */\n  reset(): this {\n    this.operations = {}\n    return this\n  }\n\n  protected _assign(op: keyof PatchOperations, props: Any, merge = true): this {\n    validateObject(op, props)\n    this.operations = Object.assign({}, this.operations, {\n      [op]: Object.assign({}, (merge && this.operations[op]) || {}, props),\n    })\n    return this\n  }\n\n  protected _set(op: keyof PatchOperations, props: Any): this {\n    return this._assign(op, props, false)\n  }\n}\n\n/** @public */\nexport class ObservablePatch extends BasePatch {\n  #client?: ObservableSanityClient\n\n  constructor(\n    selection: PatchSelection,\n    operations?: PatchOperations,\n    client?: ObservableSanityClient\n  ) {\n    super(selection, operations)\n    this.#client = client\n  }\n\n  /**\n   * Clones the patch\n   */\n  clone(): ObservablePatch {\n    return new ObservablePatch(this.selection, {...this.operations}, this.#client)\n  }\n\n  /**\n   * Commit the patch, returning an observable that produces the first patched document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options: FirstDocumentMutationOptions\n  ): Observable<SanityDocument<R>>\n  /**\n   * Commit the patch, returning an observable that produces an array of the mutated documents\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options: AllDocumentsMutationOptions\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Commit the patch, returning an observable that produces a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: FirstDocumentIdMutationOptions): Observable<SingleMutationResult>\n  /**\n   * Commit the patch, returning an observable that produces a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: AllDocumentIdsMutationOptions): Observable<MultipleMutationResult>\n  /**\n   * Commit the patch, returning an observable that produces the first patched document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?: BaseMutationOptions\n  ): Observable<SanityDocument<R>>\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?:\n      | FirstDocumentMutationOptions\n      | AllDocumentsMutationOptions\n      | FirstDocumentIdMutationOptions\n      | AllDocumentIdsMutationOptions\n      | BaseMutationOptions\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    if (!this.#client) {\n      throw new Error(\n        'No `client` passed to patch, either provide one or pass the ' +\n          'patch to a clients `mutate()` method'\n      )\n    }\n\n    const returnFirst = typeof this.selection === 'string'\n    const opts = Object.assign({returnFirst, returnDocuments: true}, options)\n    return this.#client.mutate<R>({patch: this.serialize()} as Any, opts)\n  }\n}\n\n/** @public */\nexport class Patch extends BasePatch {\n  #client?: SanityClient\n  constructor(selection: PatchSelection, operations?: PatchOperations, client?: SanityClient) {\n    super(selection, operations)\n    this.#client = client\n  }\n\n  /**\n   * Clones the patch\n   */\n  clone(): Patch {\n    return new Patch(this.selection, {...this.operations}, this.#client)\n  }\n\n  /**\n   * Commit the patch, returning a promise that resolves to the first patched document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options: FirstDocumentMutationOptions\n  ): Promise<SanityDocument<R>>\n  /**\n   * Commit the patch, returning a promise that resolves to an array of the mutated documents\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options: AllDocumentsMutationOptions\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Commit the patch, returning a promise that resolves to a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: FirstDocumentIdMutationOptions): Promise<SingleMutationResult>\n  /**\n   * Commit the patch, returning a promise that resolves to a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: AllDocumentIdsMutationOptions): Promise<MultipleMutationResult>\n  /**\n   * Commit the patch, returning a promise that resolves to the first patched document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?: BaseMutationOptions\n  ): Promise<SanityDocument<R>>\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?:\n      | FirstDocumentMutationOptions\n      | AllDocumentsMutationOptions\n      | FirstDocumentIdMutationOptions\n      | AllDocumentIdsMutationOptions\n      | BaseMutationOptions\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    if (!this.#client) {\n      throw new Error(\n        'No `client` passed to patch, either provide one or pass the ' +\n          'patch to a clients `mutate()` method'\n      )\n    }\n\n    const returnFirst = typeof this.selection === 'string'\n    const opts = Object.assign({returnFirst, returnDocuments: true}, options)\n    return this.#client.mutate<R>({patch: this.serialize()} as Any, opts)\n  }\n}\n","import type {Any, QueryParams} from '../types'\n\nexport const encodeQueryString = ({\n  query,\n  params = {},\n  options = {},\n}: {\n  query: string\n  params?: QueryParams\n  options?: Any\n}) => {\n  const searchParams = new URLSearchParams()\n  // We generally want tag at the start of the query string\n  const {tag, ...opts} = options\n  if (tag) searchParams.set('tag', tag)\n  searchParams.set('query', query)\n\n  // Iterate params, the keys are prefixed with `$` and their values JSON stringified\n  for (const [key, value] of Object.entries(params)) {\n    searchParams.set(`$${key}`, JSON.stringify(value))\n  }\n  // Options are passed as-is\n  for (const [key, value] of Object.entries(opts)) {\n    // Skip falsy values\n    if (value) searchParams.set(key, `${value}`)\n  }\n\n  return `?${searchParams}`\n}\n","import type {Observable} from 'rxjs'\n\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {\n  Any,\n  BaseMutationOptions,\n  IdentifiedSanityDocumentStub,\n  MultipleMutationResult,\n  Mutation,\n  PatchOperations,\n  SanityDocument,\n  SanityDocumentStub,\n  SingleMutationResult,\n  TransactionAllDocumentIdsMutationOptions,\n  TransactionAllDocumentsMutationOptions,\n  TransactionFirstDocumentIdMutationOptions,\n  TransactionFirstDocumentMutationOptions,\n} from '../types'\nimport * as validators from '../validators'\nimport {ObservablePatch, Patch} from './patch'\n\n/** @public */\nexport type PatchBuilder = (patch: Patch) => Patch\n/** @public */\nexport type ObservablePatchBuilder = (patch: ObservablePatch) => ObservablePatch\n\nconst defaultMutateOptions = {returnDocuments: false}\n\n/** @internal */\nexport class BaseTransaction {\n  protected operations: Mutation[]\n  protected trxId?: string\n  constructor(operations: Mutation[] = [], transactionId?: string) {\n    this.operations = operations\n    this.trxId = transactionId\n  }\n  /**\n   * Creates a new Sanity document. If `_id` is provided and already exists, the mutation will fail. If no `_id` is given, one will automatically be generated by the database.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create. Requires a `_type` property.\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(doc: SanityDocumentStub<R>): this {\n    validators.validateObject('create', doc)\n    return this._add({create: doc})\n  }\n\n  /**\n   * Creates a new Sanity document. If a document with the same `_id` already exists, the create operation will be ignored.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create if it does not already exist. Requires `_id` and `_type` properties.\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    doc: IdentifiedSanityDocumentStub<R>\n  ): this {\n    const op = 'createIfNotExists'\n    validators.validateObject(op, doc)\n    validators.requireDocumentId(op, doc)\n    return this._add({[op]: doc})\n  }\n\n  /**\n   * Creates a new Sanity document, or replaces an existing one if the same `_id` is already used.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create or replace. Requires `_id` and `_type` properties.\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    doc: IdentifiedSanityDocumentStub<R>\n  ): this {\n    const op = 'createOrReplace'\n    validators.validateObject(op, doc)\n    validators.requireDocumentId(op, doc)\n    return this._add({[op]: doc})\n  }\n\n  /**\n   * Deletes the document with the given document ID\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to delete\n   */\n  delete(documentId: string): this {\n    validators.validateDocumentId('delete', documentId)\n    return this._add({delete: {id: documentId}})\n  }\n\n  /**\n   * Gets the current transaction ID, if any\n   */\n  transactionId(): string | undefined\n  /**\n   * Set the ID of this transaction.\n   *\n   * @param id - Transaction ID\n   */\n  transactionId(id: string): this\n  transactionId(id?: string): this | string | undefined {\n    if (!id) {\n      return this.trxId\n    }\n\n    this.trxId = id\n    return this\n  }\n\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  serialize(): Mutation[] {\n    return [...this.operations]\n  }\n\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  toJSON(): Mutation[] {\n    return this.serialize()\n  }\n\n  /**\n   * Clears the transaction of all operations\n   */\n  reset(): this {\n    this.operations = []\n    return this\n  }\n\n  protected _add(mut: Mutation): this {\n    this.operations.push(mut)\n    return this\n  }\n}\n\n/** @public */\nexport class Transaction extends BaseTransaction {\n  #client?: SanityClient\n  constructor(operations?: Mutation[], client?: SanityClient, transactionId?: string) {\n    super(operations, transactionId)\n    this.#client = client\n  }\n\n  /**\n   * Clones the transaction\n   */\n  clone(): Transaction {\n    return new Transaction([...this.operations], this.#client, this.trxId)\n  }\n\n  /**\n   * Commit the transaction, returning a promise that resolves to the first mutated document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any>>(\n    options: TransactionFirstDocumentMutationOptions\n  ): Promise<SanityDocument<R>>\n  /**\n   * Commit the transaction, returning a promise that resolves to an array of the mutated documents\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any>>(\n    options: TransactionAllDocumentsMutationOptions\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Commit the transaction, returning a promise that resolves to a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: TransactionFirstDocumentIdMutationOptions): Promise<SingleMutationResult>\n  /**\n   * Commit the transaction, returning a promise that resolves to a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: TransactionAllDocumentIdsMutationOptions): Promise<MultipleMutationResult>\n  /**\n   * Commit the transaction, returning a promise that resolves to a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options?: BaseMutationOptions): Promise<MultipleMutationResult>\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?:\n      | TransactionFirstDocumentMutationOptions\n      | TransactionAllDocumentsMutationOptions\n      | TransactionFirstDocumentIdMutationOptions\n      | TransactionAllDocumentIdsMutationOptions\n      | BaseMutationOptions\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    if (!this.#client) {\n      throw new Error(\n        'No `client` passed to transaction, either provide one or pass the ' +\n          'transaction to a clients `mutate()` method'\n      )\n    }\n\n    return this.#client.mutate<R>(\n      this.serialize() as Any,\n      Object.assign({transactionId: this.trxId}, defaultMutateOptions, options || {})\n    )\n  }\n\n  /**\n   * Performs a patch on the given document ID. Can either be a builder function or an object of patch operations.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to perform the patch operation on\n   * @param patchOps - Operations to perform, or a builder function\n   */\n  patch(documentId: string, patchOps?: PatchBuilder | PatchOperations): this\n  /**\n   * Adds the given patch instance to the transaction.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param patch - Patch to execute\n   */\n  patch(patch: Patch): this\n  patch(patchOrDocumentId: Patch | string, patchOps?: PatchBuilder | PatchOperations): this {\n    const isBuilder = typeof patchOps === 'function'\n    const isPatch = typeof patchOrDocumentId !== 'string' && patchOrDocumentId instanceof Patch\n\n    // transaction.patch(client.patch('documentId').inc({visits: 1}))\n    if (isPatch) {\n      return this._add({patch: patchOrDocumentId.serialize()})\n    }\n\n    // patch => patch.inc({visits: 1}).set({foo: 'bar'})\n    if (isBuilder) {\n      const patch = patchOps(new Patch(patchOrDocumentId, {}, this.#client))\n      if (!(patch instanceof Patch)) {\n        throw new Error('function passed to `patch()` must return the patch')\n      }\n\n      return this._add({patch: patch.serialize()})\n    }\n\n    return this._add({patch: {id: patchOrDocumentId, ...patchOps}})\n  }\n}\n\n/** @public */\nexport class ObservableTransaction extends BaseTransaction {\n  #client?: ObservableSanityClient\n  constructor(operations?: Mutation[], client?: ObservableSanityClient, transactionId?: string) {\n    super(operations, transactionId)\n    this.#client = client\n  }\n\n  /**\n   * Clones the transaction\n   */\n  clone(): ObservableTransaction {\n    return new ObservableTransaction([...this.operations], this.#client, this.trxId)\n  }\n\n  /**\n   * Commit the transaction, returning an observable that produces the first mutated document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any>>(\n    options: TransactionFirstDocumentMutationOptions\n  ): Observable<SanityDocument<R>>\n  /**\n   * Commit the transaction, returning an observable that produces an array of the mutated documents\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any>>(\n    options: TransactionAllDocumentsMutationOptions\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Commit the transaction, returning an observable that produces a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: TransactionFirstDocumentIdMutationOptions): Observable<SingleMutationResult>\n  /**\n   * Commit the transaction, returning an observable that produces a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: TransactionAllDocumentIdsMutationOptions): Observable<MultipleMutationResult>\n  /**\n   * Commit the transaction, returning an observable that produces a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options?: BaseMutationOptions): Observable<MultipleMutationResult>\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?:\n      | TransactionFirstDocumentMutationOptions\n      | TransactionAllDocumentsMutationOptions\n      | TransactionFirstDocumentIdMutationOptions\n      | TransactionAllDocumentIdsMutationOptions\n      | BaseMutationOptions\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    if (!this.#client) {\n      throw new Error(\n        'No `client` passed to transaction, either provide one or pass the ' +\n          'transaction to a clients `mutate()` method'\n      )\n    }\n\n    return this.#client.mutate<R>(\n      this.serialize() as Any,\n      Object.assign({transactionId: this.trxId}, defaultMutateOptions, options || {})\n    )\n  }\n\n  /**\n   * Performs a patch on the given document ID. Can either be a builder function or an object of patch operations.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to perform the patch operation on\n   * @param patchOps - Operations to perform, or a builder function\n   */\n  patch(documentId: string, patchOps?: ObservablePatchBuilder | PatchOperations): this\n  /**\n   * Adds the given patch instance to the transaction.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param patch - ObservablePatch to execute\n   */\n  patch(patch: ObservablePatch): this\n  patch(\n    patchOrDocumentId: ObservablePatch | string,\n    patchOps?: ObservablePatchBuilder | PatchOperations\n  ): this {\n    const isBuilder = typeof patchOps === 'function'\n    const isPatch =\n      typeof patchOrDocumentId !== 'string' && patchOrDocumentId instanceof ObservablePatch\n\n    // transaction.patch(client.patch('documentId').inc({visits: 1}))\n    if (isPatch) {\n      return this._add({patch: patchOrDocumentId.serialize()})\n    }\n\n    // patch => patch.inc({visits: 1}).set({foo: 'bar'})\n    if (isBuilder) {\n      const patch = patchOps(new ObservablePatch(patchOrDocumentId, {}, this.#client))\n      if (!(patch instanceof ObservablePatch)) {\n        throw new Error('function passed to `patch()` must return the patch')\n      }\n\n      return this._add({patch: patch.serialize()})\n    }\n\n    return this._add({patch: {id: patchOrDocumentId, ...patchOps}})\n  }\n}\n","import {type MonoTypeOperatorFunction, Observable} from 'rxjs'\nimport {filter, map} from 'rxjs/operators'\n\nimport {requestOptions} from '../http/requestOptions'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {\n  AllDocumentIdsMutationOptions,\n  AllDocumentsMutationOptions,\n  Any,\n  BaseMutationOptions,\n  FilteredResponseQueryOptions,\n  FirstDocumentIdMutationOptions,\n  FirstDocumentMutationOptions,\n  HttpRequest,\n  HttpRequestEvent,\n  IdentifiedSanityDocumentStub,\n  MultipleMutationResult,\n  Mutation,\n  MutationSelection,\n  QueryParams,\n  RawQueryResponse,\n  RequestObservableOptions,\n  RequestOptions,\n  SanityDocument,\n  SingleMutationResult,\n  UnfilteredResponseQueryOptions,\n} from '../types'\nimport {getSelection} from '../util/getSelection'\nimport * as validate from '../validators'\nimport * as validators from '../validators'\nimport {encodeQueryString} from './encodeQueryString'\nimport {ObservablePatch, Patch} from './patch'\nimport {ObservableTransaction, Transaction} from './transaction'\n\nconst excludeFalsey = (param: Any, defValue: Any) => {\n  const value = typeof param === 'undefined' ? defValue : param\n  return param === false ? undefined : value\n}\n\nconst getMutationQuery = (options: BaseMutationOptions = {}) => {\n  return {\n    dryRun: options.dryRun,\n    returnIds: true,\n    returnDocuments: excludeFalsey(options.returnDocuments, true),\n    visibility: options.visibility || 'sync',\n    autoGenerateArrayKeys: options.autoGenerateArrayKeys,\n    skipCrossDatasetReferenceValidation: options.skipCrossDatasetReferenceValidation,\n  }\n}\n\nconst isResponse = (event: Any) => event.type === 'response'\nconst getBody = (event: Any) => event.body\n\nconst indexBy = (docs: Any[], attr: Any) =>\n  docs.reduce((indexed, doc) => {\n    indexed[attr(doc)] = doc\n    return indexed\n  }, Object.create(null))\n\nconst getQuerySizeLimit = 11264\n\n/** @internal */\nexport function _fetch<R, Q extends QueryParams>(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  query: string,\n  params?: Q,\n  options: FilteredResponseQueryOptions | UnfilteredResponseQueryOptions = {}\n): Observable<RawQueryResponse<R> | R> {\n  const mapResponse =\n    options.filterResponse === false ? (res: Any) => res : (res: Any) => res.result\n\n  return _dataRequest(client, httpRequest, 'query', {query, params}, options).pipe(map(mapResponse))\n}\n\n/** @internal */\nexport function _getDocument<R extends Record<string, Any>>(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  id: string,\n  opts: {tag?: string} = {}\n): Observable<SanityDocument<R> | undefined> {\n  const options = {uri: _getDataUrl(client, 'doc', id), json: true, tag: opts.tag}\n  return _requestObservable<SanityDocument<R> | undefined>(client, httpRequest, options).pipe(\n    filter(isResponse),\n    map((event) => event.body.documents && event.body.documents[0])\n  )\n}\n\n/** @internal */\nexport function _getDocuments<R extends Record<string, Any>>(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  ids: string[],\n  opts: {tag?: string} = {}\n): Observable<(SanityDocument<R> | null)[]> {\n  const options = {uri: _getDataUrl(client, 'doc', ids.join(',')), json: true, tag: opts.tag}\n  return _requestObservable<(SanityDocument<R> | null)[]>(client, httpRequest, options).pipe(\n    filter(isResponse),\n    map((event: Any) => {\n      const indexed = indexBy(event.body.documents || [], (doc: Any) => doc._id)\n      return ids.map((id) => indexed[id] || null)\n    })\n  )\n}\n\n/** @internal */\nexport function _createIfNotExists<R extends Record<string, Any>>(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  doc: IdentifiedSanityDocumentStub<R>,\n  options?:\n    | AllDocumentIdsMutationOptions\n    | AllDocumentsMutationOptions\n    | BaseMutationOptions\n    | FirstDocumentIdMutationOptions\n    | FirstDocumentMutationOptions\n): Observable<\n  SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n> {\n  validators.requireDocumentId('createIfNotExists', doc)\n  return _create<R>(client, httpRequest, doc, 'createIfNotExists', options)\n}\n\n/** @internal */\nexport function _createOrReplace<R extends Record<string, Any>>(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  doc: IdentifiedSanityDocumentStub<R>,\n  options?:\n    | AllDocumentIdsMutationOptions\n    | AllDocumentsMutationOptions\n    | BaseMutationOptions\n    | FirstDocumentIdMutationOptions\n    | FirstDocumentMutationOptions\n): Observable<\n  SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n> {\n  validators.requireDocumentId('createOrReplace', doc)\n  return _create<R>(client, httpRequest, doc, 'createOrReplace', options)\n}\n\n/** @internal */\nexport function _delete<R extends Record<string, Any>>(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  selection: string | MutationSelection,\n  options?:\n    | AllDocumentIdsMutationOptions\n    | AllDocumentsMutationOptions\n    | BaseMutationOptions\n    | FirstDocumentIdMutationOptions\n    | FirstDocumentMutationOptions\n): Observable<\n  SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n> {\n  return _dataRequest(\n    client,\n    httpRequest,\n    'mutate',\n    {mutations: [{delete: getSelection(selection)}]},\n    options\n  )\n}\n\n/** @internal */\nexport function _mutate<R extends Record<string, Any>>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  mutations: Mutation<R>[] | Patch | ObservablePatch | Transaction | ObservableTransaction,\n  options?:\n    | AllDocumentIdsMutationOptions\n    | AllDocumentsMutationOptions\n    | BaseMutationOptions\n    | FirstDocumentIdMutationOptions\n    | FirstDocumentMutationOptions\n): Observable<\n  SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n> {\n  let mut: Mutation | Mutation[]\n  if (mutations instanceof Patch || mutations instanceof ObservablePatch) {\n    mut = {patch: mutations.serialize()}\n  } else if (mutations instanceof Transaction || mutations instanceof ObservableTransaction) {\n    mut = mutations.serialize()\n  } else {\n    mut = mutations\n  }\n\n  const muts = Array.isArray(mut) ? mut : [mut]\n  const transactionId = (options && options.transactionId) || undefined\n  return _dataRequest(client, httpRequest, 'mutate', {mutations: muts, transactionId}, options)\n}\n\n/**\n * @internal\n */\nexport function _dataRequest(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  endpoint: string,\n  body: Any,\n  options: Any = {}\n): Any {\n  const isMutation = endpoint === 'mutate'\n  const isQuery = endpoint === 'query'\n\n  // Check if the query string is within a configured threshold,\n  // in which case we can use GET. Otherwise, use POST.\n  const strQuery = isMutation ? '' : encodeQueryString(body)\n  const useGet = !isMutation && strQuery.length < getQuerySizeLimit\n  const stringQuery = useGet ? strQuery : ''\n  const returnFirst = options.returnFirst\n  const {timeout, token, tag, headers} = options\n\n  const uri = _getDataUrl(client, endpoint, stringQuery)\n\n  const reqOptions = {\n    method: useGet ? 'GET' : 'POST',\n    uri: uri,\n    json: true,\n    body: useGet ? undefined : body,\n    query: isMutation && getMutationQuery(options),\n    timeout,\n    headers,\n    token,\n    tag,\n    canUseCdn: isQuery,\n    signal: options.signal,\n  }\n\n  return _requestObservable(client, httpRequest, reqOptions).pipe(\n    filter(isResponse),\n    map(getBody),\n    map((res) => {\n      if (!isMutation) {\n        return res\n      }\n\n      // Should we return documents?\n      const results = res.results || []\n      if (options.returnDocuments) {\n        return returnFirst\n          ? results[0] && results[0].document\n          : results.map((mut: Any) => mut.document)\n      }\n\n      // Return a reduced subset\n      const key = returnFirst ? 'documentId' : 'documentIds'\n      const ids = returnFirst ? results[0] && results[0].id : results.map((mut: Any) => mut.id)\n      return {\n        transactionId: res.transactionId,\n        results: results,\n        [key]: ids,\n      }\n    })\n  )\n}\n\n/**\n * @internal\n */\nexport function _create<R extends Record<string, Any>>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  doc: Any,\n  op: Any,\n  options: Any = {}\n): Observable<\n  SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n> {\n  const mutation = {[op]: doc}\n  const opts = Object.assign({returnFirst: true, returnDocuments: true}, options)\n  return _dataRequest(client, httpRequest, 'mutate', {mutations: [mutation]}, opts)\n}\n\n/**\n * @internal\n */\nexport function _requestObservable<R>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  options: RequestObservableOptions\n): Observable<HttpRequestEvent<R>> {\n  const uri = options.url || (options.uri as string)\n  const config = client.config()\n\n  // If the `canUseCdn`-option is not set we detect it automatically based on the method + URL.\n  // Only the /data endpoint is currently available through API-CDN.\n  const canUseCdn =\n    typeof options.canUseCdn === 'undefined'\n      ? ['GET', 'HEAD'].indexOf(options.method || 'GET') >= 0 && uri.indexOf('/data/') === 0\n      : options.canUseCdn\n\n  const useCdn = config.useCdn && canUseCdn\n\n  const tag =\n    options.tag && config.requestTagPrefix\n      ? [config.requestTagPrefix, options.tag].join('.')\n      : options.tag || config.requestTagPrefix\n\n  if (tag) {\n    options.query = {tag: validate.requestTag(tag), ...options.query}\n  }\n\n  const reqOptions = requestOptions(\n    config,\n    Object.assign({}, options, {\n      url: _getUrl(client, uri, useCdn),\n    })\n  ) as RequestOptions\n\n  const request = new Observable<HttpRequestEvent<R>>((subscriber) =>\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- the typings thinks it's optional because it's not required to specify it when calling createClient, but it's always defined in practice since SanityClient provides a default\n    httpRequest(reqOptions, config.requester!).subscribe(subscriber)\n  )\n\n  return options.signal ? request.pipe(_withAbortSignal(options.signal)) : request\n}\n\n/**\n * @internal\n */\nexport function _request<R>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  options: Any\n): Observable<R> {\n  const observable = _requestObservable<R>(client, httpRequest, options).pipe(\n    filter((event: Any) => event.type === 'response'),\n    map((event: Any) => event.body)\n  )\n\n  return observable\n}\n\n/**\n * @internal\n */\nexport function _getDataUrl(\n  client: SanityClient | ObservableSanityClient,\n  operation: string,\n  path?: string\n): string {\n  const config = client.config()\n  const catalog = validators.hasDataset(config)\n  const baseUri = `/${operation}/${catalog}`\n  const uri = path ? `${baseUri}/${path}` : baseUri\n  return `/data${uri}`.replace(/\\/($|\\?)/, '$1')\n}\n\n/**\n * @internal\n */\nexport function _getUrl(\n  client: SanityClient | ObservableSanityClient,\n  uri: string,\n  canUseCdn = false\n): string {\n  const {url, cdnUrl} = client.config()\n  const base = canUseCdn ? cdnUrl : url\n  return `${base}/${uri.replace(/^\\//, '')}`\n}\n\n/**\n * @internal\n */\nfunction _withAbortSignal<T>(signal: AbortSignal): MonoTypeOperatorFunction<T> {\n  return (input) => {\n    return new Observable((observer) => {\n      const abort = () => observer.error(_createAbortError(signal))\n\n      if (signal && signal.aborted) {\n        abort()\n        return\n      }\n      const subscription = input.subscribe(observer)\n      signal.addEventListener('abort', abort)\n      return () => {\n        signal.removeEventListener('abort', abort)\n        subscription.unsubscribe()\n      }\n    })\n  }\n}\n// DOMException is supported on most modern browsers and Node.js 18+.\n// @see https://developer.mozilla.org/en-US/docs/Web/API/DOMException#browser_compatibility\nconst isDomExceptionSupported = Boolean(globalThis.DOMException)\n\n/**\n * @internal\n * @param signal\n * Original source copied from https://github.com/sindresorhus/ky/blob/740732c78aad97e9aec199e9871bdbf0ae29b805/source/errors/DOMException.ts\n * TODO: When targeting Node.js 18, use `signal.throwIfAborted()` (https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/throwIfAborted)\n */\nfunction _createAbortError(signal?: AbortSignal) {\n  /*\n  NOTE: Use DomException with AbortError name as specified in MDN docs (https://developer.mozilla.org/en-US/docs/Web/API/AbortController/abort)\n  > When abort() is called, the fetch() promise rejects with an Error of type DOMException, with name AbortError.\n  */\n  if (isDomExceptionSupported) {\n    return new DOMException(signal?.reason ?? 'The operation was aborted.', 'AbortError')\n  }\n\n  // DOMException not supported. Fall back to use of error and override name.\n  const error = new Error(signal?.reason ?? 'The operation was aborted.')\n  error.name = 'AbortError'\n\n  return error\n}\n","import {lastValueFrom, type Observable} from 'rxjs'\nimport {filter, map} from 'rxjs/operators'\n\nimport {_requestObservable} from '../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {\n  Any,\n  HttpRequest,\n  HttpRequestEvent,\n  ResponseEvent,\n  SanityAssetDocument,\n  SanityImageAssetDocument,\n  UploadBody,\n  UploadClientConfig,\n} from '../types'\nimport * as validators from '../validators'\n\n/** @internal */\nexport class ObservableAssetsClient {\n  #client: ObservableSanityClient\n  #httpRequest: HttpRequest\n  constructor(client: ObservableSanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Uploads a file asset to the configured dataset\n   *\n   * @param assetType - Asset type (file)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'file',\n    body: UploadBody,\n    options?: UploadClientConfig\n  ): Observable<HttpRequestEvent<{document: SanityAssetDocument}>>\n\n  /**\n   * Uploads an image asset to the configured dataset\n   *\n   * @param assetType - Asset type (image)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'image',\n    body: UploadBody,\n    options?: UploadClientConfig\n  ): Observable<HttpRequestEvent<{document: SanityImageAssetDocument}>>\n  /**\n   * Uploads a file or an image asset to the configured dataset\n   *\n   * @param assetType - Asset type (file/image)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'file' | 'image',\n    body: UploadBody,\n    options?: UploadClientConfig\n  ): Observable<HttpRequestEvent<{document: SanityAssetDocument | SanityImageAssetDocument}>>\n  upload(\n    assetType: 'file' | 'image',\n    body: UploadBody,\n    options?: UploadClientConfig\n  ): Observable<HttpRequestEvent<{document: SanityAssetDocument | SanityImageAssetDocument}>> {\n    return _upload(this.#client, this.#httpRequest, assetType, body, options)\n  }\n}\n\n/** @internal */\nexport class AssetsClient {\n  #client: SanityClient\n  #httpRequest: HttpRequest\n  constructor(client: SanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Uploads a file asset to the configured dataset\n   *\n   * @param assetType - Asset type (file)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'file',\n    body: UploadBody,\n    options?: UploadClientConfig\n  ): Promise<SanityAssetDocument>\n  /**\n   * Uploads an image asset to the configured dataset\n   *\n   * @param assetType - Asset type (image)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'image',\n    body: UploadBody,\n    options?: UploadClientConfig\n  ): Promise<SanityImageAssetDocument>\n  /**\n   * Uploads a file or an image asset to the configured dataset\n   *\n   * @param assetType - Asset type (file/image)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'file' | 'image',\n    body: UploadBody,\n    options?: UploadClientConfig\n  ): Promise<SanityAssetDocument | SanityImageAssetDocument>\n  upload(\n    assetType: 'file' | 'image',\n    body: UploadBody,\n    options?: UploadClientConfig\n  ): Promise<SanityAssetDocument | SanityImageAssetDocument> {\n    const observable = _upload(this.#client, this.#httpRequest, assetType, body, options)\n    return lastValueFrom(\n      observable.pipe(\n        filter((event: Any) => event.type === 'response'),\n        map(\n          (event) =>\n            (event as ResponseEvent<{document: SanityAssetDocument | SanityImageAssetDocument}>)\n              .body.document\n        )\n      )\n    )\n  }\n}\n\nfunction _upload(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  assetType: 'image' | 'file',\n  body: UploadBody,\n  opts: UploadClientConfig = {}\n): Observable<HttpRequestEvent<{document: SanityAssetDocument | SanityImageAssetDocument}>> {\n  validators.validateAssetType(assetType)\n\n  // If an empty array is given, explicitly set `none` to override API defaults\n  let meta = opts.extract || undefined\n  if (meta && !meta.length) {\n    meta = ['none']\n  }\n\n  const dataset = validators.hasDataset(client.config())\n  const assetEndpoint = assetType === 'image' ? 'images' : 'files'\n  const options = optionsFromFile(opts, body)\n  const {tag, label, title, description, creditLine, filename, source} = options\n  const query: Any = {\n    label,\n    title,\n    description,\n    filename,\n    meta,\n    creditLine,\n  }\n  if (source) {\n    query.sourceId = source.id\n    query.sourceName = source.name\n    query.sourceUrl = source.url\n  }\n  return _requestObservable(client, httpRequest, {\n    tag,\n    method: 'POST',\n    timeout: options.timeout || 0,\n    uri: `/assets/${assetEndpoint}/${dataset}`,\n    headers: options.contentType ? {'Content-Type': options.contentType} : {},\n    query,\n    body,\n  })\n}\n\nfunction optionsFromFile(opts: Record<string, Any>, file: Any) {\n  if (typeof File === 'undefined' || !(file instanceof File)) {\n    return opts\n  }\n\n  return Object.assign(\n    {\n      filename: opts.preserveFilename === false ? undefined : file.name,\n      contentType: file.type,\n    },\n    opts\n  )\n}\n","const BASE_URL = 'https://www.sanity.io/help/'\n\nexport function generateHelpUrl(slug: string) {\n  return BASE_URL + slug\n}\n","import {generateHelpUrl} from './generateHelpUrl'\nimport {Any} from './types'\nimport {once} from './util/once'\n\nconst createWarningPrinter = (message: string[]) =>\n  // eslint-disable-next-line no-console\n  once((...args: Any[]) => console.warn(message.join(' '), ...args))\n\nexport const printCdnWarning = createWarningPrinter([\n  'You are not using the Sanity CDN. That means your data is always fresh, but the CDN is faster and',\n  `cheaper. Think about it! For more info, see ${generateHelpUrl('js-client-cdn-configuration')} `,\n  'To hide this warning, please set the `useCdn` option to either `true` or `false` when creating',\n  'the client.',\n])\n\nexport const printBrowserTokenWarning = createWarningPrinter([\n  'You have configured Sanity client to use a token in the browser. This may cause unintentional security issues.',\n  `See ${generateHelpUrl(\n    'js-client-browser-token'\n  )} for more information and how to hide this warning.`,\n])\n\nexport const printNoApiVersionSpecifiedWarning = createWarningPrinter([\n  'Using the Sanity client without specifying an API version is deprecated.',\n  `See ${generateHelpUrl('js-client-api-version')}`,\n])\n\nexport const printNoDefaultExport = createWarningPrinter([\n  'The default export of @sanity/client has been deprecated. Use the named export `createClient` instead',\n])\n","import type {Any} from '../types'\n\nexport function once(fn: Any) {\n  let didCall = false\n  let returnValue: Any\n  return (...args: Any[]) => {\n    if (didCall) {\n      return returnValue\n    }\n    returnValue = fn(...args)\n    didCall = true\n    return returnValue\n  }\n}\n","import {generateHelpUrl} from './generateHelpUrl'\nimport type {ClientConfig, InitializedClientConfig} from './types'\nimport * as validate from './validators'\nimport * as warnings from './warnings'\n\nconst defaultCdnHost = 'apicdn.sanity.io'\nexport const defaultConfig = {\n  apiHost: 'https://api.sanity.io',\n  apiVersion: '1',\n  useProjectHostname: true,\n} satisfies ClientConfig\n\nconst LOCALHOSTS = ['localhost', '127.0.0.1', '0.0.0.0']\nconst isLocal = (host: string) => LOCALHOSTS.indexOf(host) !== -1\n\nexport const validateApiVersion = function validateApiVersion(apiVersion: string) {\n  if (apiVersion === '1' || apiVersion === 'X') {\n    return\n  }\n\n  const apiDate = new Date(apiVersion)\n  const apiVersionValid =\n    /^\\d{4}-\\d{2}-\\d{2}$/.test(apiVersion) && apiDate instanceof Date && apiDate.getTime() > 0\n\n  if (!apiVersionValid) {\n    throw new Error('Invalid API version string, expected `1` or date in format `YYYY-MM-DD`')\n  }\n}\n\nexport const initConfig = (\n  config: Partial<ClientConfig>,\n  prevConfig: Partial<ClientConfig>\n): InitializedClientConfig => {\n  const specifiedConfig = Object.assign({}, prevConfig, config)\n  if (!specifiedConfig.apiVersion) {\n    warnings.printNoApiVersionSpecifiedWarning()\n  }\n\n  const newConfig = Object.assign({} as InitializedClientConfig, defaultConfig, specifiedConfig)\n  const projectBased = newConfig.useProjectHostname\n\n  if (typeof Promise === 'undefined') {\n    const helpUrl = generateHelpUrl('js-client-promise-polyfill')\n    throw new Error(`No native Promise-implementation found, polyfill needed - see ${helpUrl}`)\n  }\n\n  if (projectBased && !newConfig.projectId) {\n    throw new Error('Configuration must contain `projectId`')\n  }\n\n  const isBrowser = typeof window !== 'undefined' && window.location && window.location.hostname\n  const isLocalhost = isBrowser && isLocal(window.location.hostname)\n\n  if (isBrowser && isLocalhost && newConfig.token && newConfig.ignoreBrowserTokenWarning !== true) {\n    warnings.printBrowserTokenWarning()\n  } else if (typeof newConfig.useCdn === 'undefined') {\n    warnings.printCdnWarning()\n  }\n\n  if (projectBased) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- the nullability here is wrong, as line 48 throws an error if it's undefined\n    validate.projectId(newConfig.projectId!)\n  }\n\n  if (newConfig.dataset) {\n    validate.dataset(newConfig.dataset)\n  }\n\n  if ('requestTagPrefix' in newConfig) {\n    // Allow setting and unsetting request tag prefix\n    newConfig.requestTagPrefix = newConfig.requestTagPrefix\n      ? validate.requestTag(newConfig.requestTagPrefix).replace(/\\.+$/, '')\n      : undefined\n  }\n\n  newConfig.apiVersion = `${newConfig.apiVersion}`.replace(/^v/, '')\n  newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost\n  newConfig.useCdn = Boolean(newConfig.useCdn) && !newConfig.withCredentials\n\n  validateApiVersion(newConfig.apiVersion)\n\n  const hostParts = newConfig.apiHost.split('://', 2)\n  const protocol = hostParts[0]\n  const host = hostParts[1]\n  const cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host\n\n  if (newConfig.useProjectHostname) {\n    newConfig.url = `${protocol}://${newConfig.projectId}.${host}/v${newConfig.apiVersion}`\n    newConfig.cdnUrl = `${protocol}://${newConfig.projectId}.${cdnHost}/v${newConfig.apiVersion}`\n  } else {\n    newConfig.url = `${newConfig.apiHost}/v${newConfig.apiVersion}`\n    newConfig.cdnUrl = newConfig.url\n  }\n\n  return newConfig\n}\n","import {Observable} from 'rxjs'\n\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {Any, ListenEvent, ListenOptions, MutationEvent, QueryParams} from '../types'\nimport defaults from '../util/defaults'\nimport {pick} from '../util/pick'\nimport {_getDataUrl} from './dataMethods'\nimport {encodeQueryString} from './encodeQueryString'\n\n// Limit is 16K for a _request_, eg including headers. Have to account for an\n// unknown range of headers, but an average EventSource request from Chrome seems\n// to have around 700 bytes of cruft, so let us account for 1.2K to be \"safe\"\nconst MAX_URL_LENGTH = 16000 - 1200\n\nconst possibleOptions = [\n  'includePreviousRevision',\n  'includeResult',\n  'visibility',\n  'effectFormat',\n  'tag',\n]\n\nconst defaultOptions = {\n  includeResult: true,\n}\n\n/**\n * Set up a listener that will be notified when mutations occur on documents matching the provided query/filter.\n *\n * @param query - GROQ-filter to listen to changes for\n * @param params - Optional query parameters\n * @param options - Listener options\n * @internal\n */\nexport function _listen<R extends Record<string, Any> = Record<string, Any>>(\n  this: SanityClient | ObservableSanityClient,\n  query: string,\n  params?: QueryParams\n): Observable<MutationEvent<R>>\n/**\n * Set up a listener that will be notified when mutations occur on documents matching the provided query/filter.\n *\n * @param query - GROQ-filter to listen to changes for\n * @param params - Optional query parameters\n * @param options - Listener options\n * @internal\n */\nexport function _listen<R extends Record<string, Any> = Record<string, Any>>(\n  this: SanityClient | ObservableSanityClient,\n  query: string,\n  params?: QueryParams,\n  options?: ListenOptions\n): Observable<ListenEvent<R>>\n/** @internal */\nexport function _listen<R extends Record<string, Any> = Record<string, Any>>(\n  this: SanityClient | ObservableSanityClient,\n  query: string,\n  params?: QueryParams,\n  opts: ListenOptions = {}\n): Observable<MutationEvent<R> | ListenEvent<R>> {\n  const {url, token, withCredentials, requestTagPrefix} = this.config()\n  const tag = opts.tag && requestTagPrefix ? [requestTagPrefix, opts.tag].join('.') : opts.tag\n  const options = {...defaults(opts, defaultOptions), tag}\n  const listenOpts = pick(options, possibleOptions)\n  const qs = encodeQueryString({query, params, options: {tag, ...listenOpts}})\n\n  const uri = `${url}${_getDataUrl(this, 'listen', qs)}`\n  if (uri.length > MAX_URL_LENGTH) {\n    return new Observable((observer) => observer.error(new Error('Query too large for listener')))\n  }\n\n  const listenFor = options.events ? options.events : ['mutation']\n  const shouldEmitReconnect = listenFor.indexOf('reconnect') !== -1\n\n  const esOptions: EventSourceInit & {headers?: Record<string, string>} = {}\n  if (token || withCredentials) {\n    esOptions.withCredentials = true\n  }\n\n  if (token) {\n    esOptions.headers = {\n      Authorization: `Bearer ${token}`,\n    }\n  }\n\n  return new Observable((observer) => {\n    let es: InstanceType<typeof import('@sanity/eventsource')>\n    getEventSource()\n      .then((eventSource) => {\n        es = eventSource\n      })\n      .catch((reason) => {\n        observer.error(reason)\n        stop()\n      })\n    let reconnectTimer: NodeJS.Timeout\n    let stopped = false\n\n    function onError() {\n      if (stopped) {\n        return\n      }\n\n      emitReconnect()\n\n      // Allow event handlers of `emitReconnect` to cancel/close the reconnect attempt\n      if (stopped) {\n        return\n      }\n\n      // Unless we've explicitly stopped the ES (in which case `stopped` should be true),\n      // we should never be in a disconnected state. By default, EventSource will reconnect\n      // automatically, in which case it sets readyState to `CONNECTING`, but in some cases\n      // (like when a laptop lid is closed), it closes the connection. In these cases we need\n      // to explicitly reconnect.\n      if (es.readyState === es.CLOSED) {\n        unsubscribe()\n        clearTimeout(reconnectTimer)\n        reconnectTimer = setTimeout(open, 100)\n      }\n    }\n\n    function onChannelError(err: Any) {\n      observer.error(cooerceError(err))\n    }\n\n    function onMessage(evt: Any) {\n      const event = parseEvent(evt)\n      return event instanceof Error ? observer.error(event) : observer.next(event)\n    }\n\n    function onDisconnect() {\n      stopped = true\n      unsubscribe()\n      observer.complete()\n    }\n\n    function unsubscribe() {\n      if (!es) return\n      es.removeEventListener('error', onError)\n      es.removeEventListener('channelError', onChannelError)\n      es.removeEventListener('disconnect', onDisconnect)\n      listenFor.forEach((type: string) => es.removeEventListener(type, onMessage))\n      es.close()\n    }\n\n    function emitReconnect() {\n      if (shouldEmitReconnect) {\n        observer.next({type: 'reconnect'})\n      }\n    }\n\n    async function getEventSource(): Promise<InstanceType<typeof import('@sanity/eventsource')>> {\n      const {default: EventSource} = await import('@sanity/eventsource')\n      const evs = new EventSource(uri, esOptions)\n      evs.addEventListener('error', onError)\n      evs.addEventListener('channelError', onChannelError)\n      evs.addEventListener('disconnect', onDisconnect)\n      listenFor.forEach((type: string) => evs.addEventListener(type, onMessage))\n      return evs\n    }\n\n    function open() {\n      getEventSource()\n        .then((eventSource) => {\n          es = eventSource\n        })\n        .catch((reason) => {\n          observer.error(reason)\n          stop()\n        })\n    }\n\n    function stop() {\n      stopped = true\n      unsubscribe()\n    }\n\n    return stop\n  })\n}\n\nfunction parseEvent(event: Any) {\n  try {\n    const data = (event.data && JSON.parse(event.data)) || {}\n    return Object.assign({type: event.type}, data)\n  } catch (err) {\n    return err\n  }\n}\n\nfunction cooerceError(err: Any) {\n  if (err instanceof Error) {\n    return err\n  }\n\n  const evt = parseEvent(err)\n  return evt instanceof Error ? evt : new Error(extractErrorMessage(evt))\n}\n\nfunction extractErrorMessage(err: Any) {\n  if (!err.error) {\n    return err.message || 'Unknown listener error'\n  }\n\n  if (err.error.description) {\n    return err.error.description\n  }\n\n  return typeof err.error === 'string' ? err.error : JSON.stringify(err.error, null, 2)\n}\n","import type {Any} from '../types'\n\nexport default (obj: Any, defaults: Any) =>\n  Object.keys(defaults)\n    .concat(Object.keys(obj))\n    .reduce((target, prop) => {\n      target[prop] = typeof obj[prop] === 'undefined' ? defaults[prop] : obj[prop]\n\n      return target\n    }, {} as Any)\n","import {Any} from '../types'\n\nexport const pick = (obj: Any, props: Any) =>\n  props.reduce((selection: Any, prop: Any) => {\n    if (typeof obj[prop] === 'undefined') {\n      return selection\n    }\n\n    selection[prop] = obj[prop]\n    return selection\n  }, {})\n","import {lastValueFrom, type Observable} from 'rxjs'\n\nimport {_request} from '../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {DatasetAclMode, DatasetResponse, DatasetsResponse, HttpRequest} from '../types'\nimport * as validate from '../validators'\n\n/** @internal */\nexport class ObservableDatasetsClient {\n  #client: ObservableSanityClient\n  #httpRequest: HttpRequest\n  constructor(client: ObservableSanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name: string, options?: {aclMode?: DatasetAclMode}): Observable<DatasetResponse> {\n    return _modify<DatasetResponse>(this.#client, this.#httpRequest, 'PUT', name, options)\n  }\n\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name: string, options?: {aclMode?: DatasetAclMode}): Observable<DatasetResponse> {\n    return _modify<DatasetResponse>(this.#client, this.#httpRequest, 'PATCH', name, options)\n  }\n\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name: string): Observable<{deleted: true}> {\n    return _modify<{deleted: true}>(this.#client, this.#httpRequest, 'DELETE', name)\n  }\n\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list(): Observable<DatasetsResponse> {\n    return _request<DatasetsResponse>(this.#client, this.#httpRequest, {uri: '/datasets'})\n  }\n}\n\n/** @internal */\nexport class DatasetsClient {\n  #client: SanityClient\n  #httpRequest: HttpRequest\n  constructor(client: SanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name: string, options?: {aclMode?: DatasetAclMode}): Promise<DatasetResponse> {\n    return lastValueFrom(\n      _modify<DatasetResponse>(this.#client, this.#httpRequest, 'PUT', name, options)\n    )\n  }\n\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name: string, options?: {aclMode?: DatasetAclMode}): Promise<DatasetResponse> {\n    return lastValueFrom(\n      _modify<DatasetResponse>(this.#client, this.#httpRequest, 'PATCH', name, options)\n    )\n  }\n\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name: string): Promise<{deleted: true}> {\n    return lastValueFrom(_modify<{deleted: true}>(this.#client, this.#httpRequest, 'DELETE', name))\n  }\n\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list(): Promise<DatasetsResponse> {\n    return lastValueFrom(\n      _request<DatasetsResponse>(this.#client, this.#httpRequest, {uri: '/datasets'})\n    )\n  }\n}\n\nfunction _modify<R = unknown>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  method: 'DELETE' | 'PATCH' | 'PUT',\n  name: string,\n  options?: {aclMode?: DatasetAclMode}\n) {\n  validate.dataset(name)\n  return _request<R>(client, httpRequest, {method, uri: `/datasets/${name}`, body: options})\n}\n","import {lastValueFrom, type Observable} from 'rxjs'\n\nimport {_request} from '../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {HttpRequest, SanityProject} from '../types'\n\n/** @internal */\nexport class ObservableProjectsClient {\n  #client: ObservableSanityClient\n  #httpRequest: HttpRequest\n  constructor(client: ObservableSanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Fetch a list of projects the authenticated user has access to\n   */\n  list(): Observable<SanityProject[]> {\n    return _request<SanityProject[]>(this.#client, this.#httpRequest, {uri: '/projects'})\n  }\n\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId: string): Observable<SanityProject> {\n    return _request<SanityProject>(this.#client, this.#httpRequest, {uri: `/projects/${projectId}`})\n  }\n}\n\n/** @internal */\nexport class ProjectsClient {\n  #client: SanityClient\n  #httpRequest: HttpRequest\n  constructor(client: SanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Fetch a list of projects the authenticated user has access to\n   */\n  list(): Promise<SanityProject[]> {\n    return lastValueFrom(\n      _request<SanityProject[]>(this.#client, this.#httpRequest, {uri: '/projects'})\n    )\n  }\n\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId: string): Promise<SanityProject> {\n    return lastValueFrom(\n      _request<SanityProject>(this.#client, this.#httpRequest, {uri: `/projects/${projectId}`})\n    )\n  }\n}\n","import {lastValueFrom, type Observable} from 'rxjs'\n\nimport {_request} from '../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {CurrentSanityUser, HttpRequest, SanityUser} from '../types'\n\n/** @public */\nexport class ObservableUsersClient {\n  #client: ObservableSanityClient\n  #httpRequest: HttpRequest\n  constructor(client: ObservableSanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById<T extends 'me' | string>(\n    id: T\n  ): Observable<T extends 'me' ? CurrentSanityUser : SanityUser> {\n    return _request<T extends 'me' ? CurrentSanityUser : SanityUser>(\n      this.#client,\n      this.#httpRequest,\n      {uri: `/users/${id}`}\n    )\n  }\n}\n\n/** @public */\nexport class UsersClient {\n  #client: SanityClient\n  #httpRequest: HttpRequest\n  constructor(client: SanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById<T extends 'me' | string>(\n    id: T\n  ): Promise<T extends 'me' ? CurrentSanityUser : SanityUser> {\n    return lastValueFrom(\n      _request<T extends 'me' ? CurrentSanityUser : SanityUser>(this.#client, this.#httpRequest, {\n        uri: `/users/${id}`,\n      })\n    )\n  }\n}\n","import {lastValueFrom, Observable} from 'rxjs'\n\nimport {AssetsClient, ObservableAssetsClient} from './assets/AssetsClient'\nimport {defaultConfig, initConfig} from './config'\nimport * as dataMethods from './data/dataMethods'\nimport {_listen} from './data/listen'\nimport {ObservablePatch, Patch} from './data/patch'\nimport {ObservableTransaction, Transaction} from './data/transaction'\nimport {DatasetsClient, ObservableDatasetsClient} from './datasets/DatasetsClient'\nimport {ObservableProjectsClient, ProjectsClient} from './projects/ProjectsClient'\nimport type {\n  AllDocumentIdsMutationOptions,\n  AllDocumentsMutationOptions,\n  Any,\n  BaseMutationOptions,\n  ClientConfig,\n  FilteredResponseQueryOptions,\n  FirstDocumentIdMutationOptions,\n  FirstDocumentMutationOptions,\n  HttpRequest,\n  IdentifiedSanityDocumentStub,\n  InitializedClientConfig,\n  MultipleMutationResult,\n  Mutation,\n  MutationSelection,\n  PatchOperations,\n  PatchSelection,\n  QueryParams,\n  RawQueryResponse,\n  RawRequestOptions,\n  SanityDocument,\n  SanityDocumentStub,\n  SingleMutationResult,\n  UnfilteredResponseQueryOptions,\n} from './types'\nimport {ObservableUsersClient, UsersClient} from './users/UsersClient'\n\nexport type {\n  _listen,\n  AssetsClient,\n  DatasetsClient,\n  ObservableAssetsClient,\n  ObservableDatasetsClient,\n  ObservableProjectsClient,\n  ObservableUsersClient,\n  ProjectsClient,\n  UsersClient,\n}\n\n/** @public */\nexport class ObservableSanityClient {\n  assets: ObservableAssetsClient\n  datasets: ObservableDatasetsClient\n  projects: ObservableProjectsClient\n  users: ObservableUsersClient\n\n  /**\n   * Private properties\n   */\n  #clientConfig: InitializedClientConfig\n  #httpRequest: HttpRequest\n\n  /**\n   * Instance properties\n   */\n  listen = _listen\n\n  constructor(httpRequest: HttpRequest, config: ClientConfig = defaultConfig) {\n    this.config(config)\n\n    this.#httpRequest = httpRequest\n\n    this.assets = new ObservableAssetsClient(this, this.#httpRequest)\n    this.datasets = new ObservableDatasetsClient(this, this.#httpRequest)\n    this.projects = new ObservableProjectsClient(this, this.#httpRequest)\n    this.users = new ObservableUsersClient(this, this.#httpRequest)\n  }\n\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone(): ObservableSanityClient {\n    return new ObservableSanityClient(this.#httpRequest, this.config())\n  }\n\n  /**\n   * Returns the current client configuration\n   */\n  config(): InitializedClientConfig\n  /**\n   * Reconfigure the client. Note that this _mutates_ the current client.\n   */\n  config(newConfig?: Partial<ClientConfig>): this\n  config(newConfig?: Partial<ClientConfig>): ClientConfig | this {\n    if (newConfig === undefined) {\n      return {...this.#clientConfig}\n    }\n\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === false) {\n      throw new Error(\n        'Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client'\n      )\n    }\n\n    this.#clientConfig = initConfig(newConfig, this.#clientConfig || {})\n    return this\n  }\n\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig?: Partial<ClientConfig>): ObservableSanityClient {\n    return new ObservableSanityClient(this.#httpRequest, {...this.config(), ...newConfig})\n  }\n\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   */\n  fetch<R = Any>(query: string): Observable<R>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Query parameters\n   */\n  fetch<R = Any, Q = QueryParams>(query: string, params: Q): Observable<R>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Query parameters\n   * @param options - Request options\n   */\n  fetch<R = Any, Q = QueryParams>(\n    query: string,\n    params: Q | undefined,\n    options: FilteredResponseQueryOptions\n  ): Observable<R>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Query parameters\n   * @param options - Request options\n   */\n  fetch<R = Any, Q = QueryParams>(\n    query: string,\n    params: Q | undefined,\n    options: UnfilteredResponseQueryOptions\n  ): Observable<RawQueryResponse<R>>\n  fetch<R, Q extends QueryParams>(\n    query: string,\n    params?: Q,\n    options: FilteredResponseQueryOptions | UnfilteredResponseQueryOptions = {}\n  ): Observable<RawQueryResponse<R> | R> {\n    return dataMethods._fetch<R, Q>(this, this.#httpRequest, query, params, options)\n  }\n\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options?: {tag?: string}\n  ): Observable<SanityDocument<R> | undefined> {\n    return dataMethods._getDocument<R>(this, this.#httpRequest, id, options)\n  }\n\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments<R extends Record<string, Any> = Record<string, Any>>(\n    ids: string[],\n    options?: {tag?: string}\n  ): Observable<(SanityDocument<R> | null)[]> {\n    return dataMethods._getDocuments<R>(this, this.#httpRequest, ids, options)\n  }\n\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions\n  ): Observable<SanityDocument<R>>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns an observable that resolves to an array containing the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns an observable that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions\n  ): Observable<SingleMutationResult>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns an observable that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions\n  ): Observable<MultipleMutationResult>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options?: BaseMutationOptions\n  ): Observable<SanityDocument<R>>\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return dataMethods._create<R>(this, this.#httpRequest, document, 'create', options)\n  }\n\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions\n  ): Observable<SanityDocument<R>>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns an observable that resolves to an array containing the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns an observable that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions\n  ): Observable<SingleMutationResult>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns an observable that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions\n  ): Observable<MultipleMutationResult>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?: BaseMutationOptions\n  ): Observable<SanityDocument<R>>\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return dataMethods._createIfNotExists<R>(this, this.#httpRequest, document, options)\n  }\n\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions\n  ): Observable<SanityDocument<R>>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns an observable that resolves to an array containing the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns an observable that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions\n  ): Observable<SingleMutationResult>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns an observable that resolves to a mutation result object containing the created document ID.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions\n  ): Observable<MultipleMutationResult>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?: BaseMutationOptions\n  ): Observable<SanityDocument<R>>\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return dataMethods._createOrReplace<R>(this, this.#httpRequest, document, options)\n  }\n\n  /**\n   * Deletes a document with the given document ID.\n   * Returns an observable that resolves to the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options: FirstDocumentMutationOptions\n  ): Observable<SanityDocument<R>>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns an observable that resolves to an array containing the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options: AllDocumentsMutationOptions\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns an observable that resolves to a mutation result object containing the deleted document ID.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete(id: string, options: FirstDocumentIdMutationOptions): Observable<SingleMutationResult>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns an observable that resolves to a mutation result object containing the deleted document ID.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete(id: string, options: AllDocumentIdsMutationOptions): Observable<MultipleMutationResult>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns an observable that resolves to the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options?: BaseMutationOptions\n  ): Observable<SanityDocument<R>>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns an observable that resolves to first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options: FirstDocumentMutationOptions\n  ): Observable<SanityDocument<R>>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns an observable that resolves to an array containing the deleted documents.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options: AllDocumentsMutationOptions\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns an observable that resolves to a mutation result object containing the ID of the first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete(\n    selection: MutationSelection,\n    options: FirstDocumentIdMutationOptions\n  ): Observable<SingleMutationResult>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns an observable that resolves to a mutation result object containing the document IDs that were deleted.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete(\n    selection: MutationSelection,\n    options: AllDocumentIdsMutationOptions\n  ): Observable<MultipleMutationResult>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns an observable that resolves to first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options?: BaseMutationOptions\n  ): Observable<SanityDocument<R>>\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: string | MutationSelection,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return dataMethods._delete<R>(this, this.#httpRequest, selection, options)\n  }\n\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns an observable that resolves to the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options: FirstDocumentMutationOptions\n  ): Observable<SanityDocument<R>>\n  /**\n   * Perform mutation operations against the configured dataset.\n   * Returns an observable that resolves to an array of the mutated documents.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options: AllDocumentsMutationOptions\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns an observable that resolves to a mutation result object containing the document ID of the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options: FirstDocumentIdMutationOptions\n  ): Observable<SingleMutationResult>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns an observable that resolves to a mutation result object containing the mutated document IDs.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options: AllDocumentIdsMutationOptions\n  ): Observable<MultipleMutationResult>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns an observable that resolves to the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options?: BaseMutationOptions\n  ): Observable<SanityDocument<R>>\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options?:\n      | FirstDocumentMutationOptions\n      | AllDocumentsMutationOptions\n      | FirstDocumentIdMutationOptions\n      | AllDocumentIdsMutationOptions\n      | BaseMutationOptions\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return dataMethods._mutate<R>(this, this.#httpRequest, operations, options)\n  }\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param documentId - Document ID(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   */\n  patch(documentId: PatchSelection, operations?: PatchOperations): ObservablePatch {\n    return new ObservablePatch(documentId, operations, this)\n  }\n\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction<R extends Record<string, Any> = Record<string, Any>>(\n    operations?: Mutation<R>[]\n  ): ObservableTransaction {\n    return new ObservableTransaction(operations, this)\n  }\n\n  /**\n   * DEPRECATED: Perform an HTTP request against the Sanity API\n   *\n   * @deprecated Use your own request library!\n   * @param options - Request options\n   */\n  request<R = Any>(options: RawRequestOptions): Observable<R> {\n    return dataMethods._request(this, this.#httpRequest, options)\n  }\n\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri: string, canUseCdn?: boolean): string {\n    return dataMethods._getUrl(this, uri, canUseCdn)\n  }\n\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation: string, path?: string): string {\n    return dataMethods._getDataUrl(this, operation, path)\n  }\n}\n\n/** @public */\nexport class SanityClient {\n  assets: AssetsClient\n  datasets: DatasetsClient\n  projects: ProjectsClient\n  users: UsersClient\n\n  /**\n   * Observable version of the Sanity client, with the same configuration as the promise-based one\n   */\n  observable: ObservableSanityClient\n\n  /**\n   * Private properties\n   */\n  #clientConfig: InitializedClientConfig\n  #httpRequest: HttpRequest\n\n  /**\n   * Instance properties\n   */\n  listen = _listen\n\n  constructor(httpRequest: HttpRequest, config: ClientConfig = defaultConfig) {\n    this.config(config)\n\n    this.#httpRequest = httpRequest\n\n    this.assets = new AssetsClient(this, this.#httpRequest)\n    this.datasets = new DatasetsClient(this, this.#httpRequest)\n    this.projects = new ProjectsClient(this, this.#httpRequest)\n    this.users = new UsersClient(this, this.#httpRequest)\n\n    this.observable = new ObservableSanityClient(httpRequest, config)\n  }\n\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone(): SanityClient {\n    return new SanityClient(this.#httpRequest, this.config())\n  }\n\n  /**\n   * Returns the current client configuration\n   */\n  config(): InitializedClientConfig\n  /**\n   * Reconfigure the client. Note that this _mutates_ the current client.\n   */\n  config(newConfig?: Partial<ClientConfig>): this\n  config(newConfig?: Partial<ClientConfig>): ClientConfig | this {\n    if (newConfig === undefined) {\n      return {...this.#clientConfig}\n    }\n\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === false) {\n      throw new Error(\n        'Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client'\n      )\n    }\n\n    if (this.observable) {\n      this.observable.config(newConfig)\n    }\n\n    this.#clientConfig = initConfig(newConfig, this.#clientConfig || {})\n    return this\n  }\n\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig?: Partial<ClientConfig>): SanityClient {\n    return new SanityClient(this.#httpRequest, {...this.config(), ...newConfig})\n  }\n\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   */\n  fetch<R = Any>(query: string): Promise<R>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Optional query parameters\n   */\n  fetch<R = Any, Q = QueryParams>(query: string, params: Q): Promise<R>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Optional query parameters\n   * @param options - Request options\n   */\n  fetch<R = Any, Q = QueryParams>(\n    query: string,\n    params: Q | undefined,\n    options: FilteredResponseQueryOptions\n  ): Promise<R>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Optional query parameters\n   * @param options - Request options\n   */\n  fetch<R = Any, Q = QueryParams>(\n    query: string,\n    params: Q | undefined,\n    options: UnfilteredResponseQueryOptions\n  ): Promise<RawQueryResponse<R>>\n  fetch<R, Q extends QueryParams>(\n    query: string,\n    params?: Q,\n    options: FilteredResponseQueryOptions | UnfilteredResponseQueryOptions = {}\n  ): Promise<RawQueryResponse<R> | R> {\n    return lastValueFrom(dataMethods._fetch<R, Q>(this, this.#httpRequest, query, params, options))\n  }\n\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options?: {tag?: string}\n  ): Promise<SanityDocument<R> | undefined> {\n    return lastValueFrom(dataMethods._getDocument<R>(this, this.#httpRequest, id, options))\n  }\n\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments<R extends Record<string, Any> = Record<string, Any>>(\n    ids: string[],\n    options?: {tag?: string}\n  ): Promise<(SanityDocument<R> | null)[]> {\n    return lastValueFrom(dataMethods._getDocuments<R>(this, this.#httpRequest, ids, options))\n  }\n\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions\n  ): Promise<SanityDocument<R>>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns a promise that resolves to an array containing the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns a promise that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions\n  ): Promise<SingleMutationResult>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns a promise that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions\n  ): Promise<MultipleMutationResult>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options?: BaseMutationOptions\n  ): Promise<SanityDocument<R>>\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return lastValueFrom(\n      dataMethods._create<R>(this, this.#httpRequest, document, 'create', options)\n    )\n  }\n\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions\n  ): Promise<SanityDocument<R>>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns a promise that resolves to an array containing the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns a promise that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions\n  ): Promise<SingleMutationResult>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns a promise that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions\n  ): Promise<MultipleMutationResult>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?: BaseMutationOptions\n  ): Promise<SanityDocument<R>>\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return lastValueFrom(\n      dataMethods._createIfNotExists<R>(this, this.#httpRequest, document, options)\n    )\n  }\n\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions\n  ): Promise<SanityDocument<R>>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns a promise that resolves to an array containing the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns a promise that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions\n  ): Promise<SingleMutationResult>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns a promise that resolves to a mutation result object containing the created document ID.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions\n  ): Promise<MultipleMutationResult>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?: BaseMutationOptions\n  ): Promise<SanityDocument<R>>\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return lastValueFrom(\n      dataMethods._createOrReplace<R>(this, this.#httpRequest, document, options)\n    )\n  }\n\n  /**\n   * Deletes a document with the given document ID.\n   * Returns a promise that resolves to the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options: FirstDocumentMutationOptions\n  ): Promise<SanityDocument<R>>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns a promise that resolves to an array containing the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options: AllDocumentsMutationOptions\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns a promise that resolves to a mutation result object containing the deleted document ID.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete(id: string, options: FirstDocumentIdMutationOptions): Promise<SingleMutationResult>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns a promise that resolves to a mutation result object containing the deleted document ID.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete(id: string, options: AllDocumentIdsMutationOptions): Promise<MultipleMutationResult>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns a promise that resolves to the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options?: BaseMutationOptions\n  ): Promise<SanityDocument<R>>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns a promise that resolves to first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options: FirstDocumentMutationOptions\n  ): Promise<SanityDocument<R>>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns a promise that resolves to an array containing the deleted documents.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options: AllDocumentsMutationOptions\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns a promise that resolves to a mutation result object containing the ID of the first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete(\n    selection: MutationSelection,\n    options: FirstDocumentIdMutationOptions\n  ): Promise<SingleMutationResult>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns a promise that resolves to a mutation result object containing the document IDs that were deleted.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete(\n    selection: MutationSelection,\n    options: AllDocumentIdsMutationOptions\n  ): Promise<MultipleMutationResult>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns a promise that resolves to first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options?: BaseMutationOptions\n  ): Promise<SanityDocument<R>>\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: string | MutationSelection,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return lastValueFrom(dataMethods._delete<R>(this, this.#httpRequest, selection, options))\n  }\n\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns a promise that resolves to the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options: FirstDocumentMutationOptions\n  ): Promise<SanityDocument<R>>\n  /**\n   * Perform mutation operations against the configured dataset.\n   * Returns a promise that resolves to an array of the mutated documents.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options: AllDocumentsMutationOptions\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns a promise that resolves to a mutation result object containing the document ID of the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options: FirstDocumentIdMutationOptions\n  ): Promise<SingleMutationResult>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns a promise that resolves to a mutation result object containing the mutated document IDs.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options: AllDocumentIdsMutationOptions\n  ): Promise<MultipleMutationResult>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns a promise that resolves to the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options?: BaseMutationOptions\n  ): Promise<SanityDocument<R>>\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options?:\n      | FirstDocumentMutationOptions\n      | AllDocumentsMutationOptions\n      | FirstDocumentIdMutationOptions\n      | AllDocumentIdsMutationOptions\n      | BaseMutationOptions\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return lastValueFrom(dataMethods._mutate<R>(this, this.#httpRequest, operations, options))\n  }\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param documentId - Document ID(s)to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   */\n  patch(documentId: PatchSelection, operations?: PatchOperations): Patch {\n    return new Patch(documentId, operations, this)\n  }\n\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction<R extends Record<string, Any> = Record<string, Any>>(\n    operations?: Mutation<R>[]\n  ): Transaction {\n    return new Transaction(operations, this)\n  }\n\n  /**\n   * DEPRECATED: Perform an HTTP request against the Sanity API\n   *\n   * @deprecated Use your own request library!\n   * @param options - Request options\n   */\n  request<R = Any>(options: RawRequestOptions): Promise<R> {\n    return lastValueFrom(dataMethods._request<R>(this, this.#httpRequest, options))\n  }\n\n  /**\n   * DEPRECATED: Perform an HTTP request a `/data` sub-endpoint\n   *\n   * @deprecated Use your own request library!\n   * @param endpoint - Endpoint to hit (mutate, query etc)\n   * @param body - Request body\n   * @param options - Request options\n   */\n  dataRequest(endpoint: string, body: unknown, options?: BaseMutationOptions): Promise<Any> {\n    return lastValueFrom(dataMethods._dataRequest(this, this.#httpRequest, endpoint, body, options))\n  }\n\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri: string, canUseCdn?: boolean): string {\n    return dataMethods._getUrl(this, uri, canUseCdn)\n  }\n\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation: string, path?: string): string {\n    return dataMethods._getDataUrl(this, operation, path)\n  }\n}\n","import envMiddleware from './http/browserMiddleware'\nimport {defineHttpRequest} from './http/request'\nimport {SanityClient} from './SanityClient'\nimport type {ClientConfig} from './types'\nimport {printNoDefaultExport} from './warnings'\n\nexport * from './data/patch'\nexport * from './data/transaction'\nexport {ClientError, ServerError} from './http/errors'\nexport * from './SanityClient'\nexport * from './types'\n\n// Set the http client to use for requests, and its environment specific middleware\nconst httpRequest = defineHttpRequest(envMiddleware)\n/** @public */\nexport const requester = httpRequest.defaultRequester\n\n/** @public */\nexport const createClient = (config: ClientConfig) => new SanityClient(httpRequest, config)\n\n/**\n * @public\n * @deprecated Use the named export `createClient` instead of the `default` export\n */\nexport default function deprecatedCreateClient(config: ClientConfig) {\n  printNoDefaultExport()\n  return new SanityClient(httpRequest, config)\n}\n\n/** @alpha */\nexport {adapter as unstable__adapter, environment as unstable__environment} from 'get-it'\n","import {createRequester} from './createRequester'\nimport httpRequester from './request/browser-request'\nimport type {ExportEnv, HttpRequest, Middlewares, Requester} from './types'\n\nexport * from './types'\n\n/** @public */\nexport const getIt = (\n  initMiddleware: Middlewares = [],\n  httpRequest: HttpRequest = httpRequester\n): Requester => createRequester(initMiddleware, httpRequest)\n\n/** @public */\nexport const environment: ExportEnv = 'browser'\n\n/** @public */\nexport {adapter} from './request/browser-request'\n","import type {RequestAdapter} from '../../types'\n\nexport function progress() {\n  return {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onRequest: (evt: {adapter: RequestAdapter; [key: string]: any}) => {\n      if (evt.adapter !== 'xhr') {\n        return\n      }\n\n      const xhr = evt.request\n      const context = evt.context\n\n      if ('upload' in xhr && 'onprogress' in xhr.upload) {\n        xhr.upload.onprogress = handleProgress('upload')\n      }\n\n      if ('onprogress' in xhr) {\n        xhr.onprogress = handleProgress('download')\n      }\n\n      function handleProgress(stage: any) {\n        return (event: any) => {\n          const percent = event.lengthComputable ? (event.loaded / event.total) * 100 : -1\n          context.channels.progress.publish({\n            stage,\n            percent,\n            total: event.total,\n            loaded: event.loaded,\n            lengthComputable: event.lengthComputable,\n          })\n        }\n      }\n    },\n  }\n}\n","export default []\n"],"names":["example","parseAssetId","ref","_ref$split","split","id","dimensionString","format","Error","_dimensionString$spli","width","height","isFinite","isRef","src","_ref","isAsset","_id","isAssetStub","source","asset","url","parseSource","image","isUrl","urlToId","_extends","img","crop","hotspot","applyDefaults","test","slice","replace","result","left","top","bottom","right","x","y","SPEC_NAME_TO_URL_NAME_MAPPINGS","urlForImage","options","spec","JSON","stringify","cropLeft","Math","round","cropTop","hotSpotVerticalRadius","hotSpotHorizontalRadius","hotSpotCenterX","hotSpotCenterY","rect","focalPoint","ignoreImageParams","fit","specToImageUrl","cdnUrl","baseUrl","filename","projectId","dataset","params","_spec$rect","push","bg","flip","flipHorizontal","flipVertical","filter","Boolean","join","forEach","mapping","specName","param","encodeURIComponent","length","cropRect","imgWidth","imgHeight","desiredAspectRatio","max","hotspotXCenter","_width","_height","_left","hotspotYCenter","_top","validFits","validCrops","validAutoModes","isSanityModernClientLike","client","config","isSanityClientLike","clientConfig","rewriteSpecName","key","_step","_iterator","_createForOfIteratorHelperLoose","done","entry","value","urlBuilder","_options$config","apiUrl","apiHost","ImageUrlBuilder","_client$clientConfig","_apiUrl","_projectId","_dataset","parent","this","_proto","prototype","withOptions","newOptions","hasOwnProperty","_dataset2","_projectId2","_bg","dpr","_dpr","maxWidth","_maxWidth","minWidth","_minWidth","maxHeight","_maxHeight","minHeight","_minHeight","size","blur","_blur","sharpen","_sharpen","_format","invert","_invert","orientation","_orientation","quality","_quality","forceDownload","download","indexOf","saturation","_saturation","auto","pad","_pad","toString","exports","formatArgs","args","useColors","namespace","module","humanize","diff","c","color","splice","index","lastC","match","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","process","DEBUG","window","type","__nwjs","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","RegExp","$1","localStorage","localstorage","destroy","warned","warn","colors","log","debug","require","formatters","j","v","message","env","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","_len","arguments","Array","_key","enabled","self","curr","Number","Date","ms","prev","coerce","unshift","formatter","val","call","apply","selectColor","extend","Object","defineProperty","enumerable","configurable","get","set","init","delimiter","newDebug","toNamespace","regexp","substring","default","stack","disable","concat","_toConsumableArray","names","map","skips","enable","i","len","name","keys","hash","charCodeAt","abs","s","m","h","d","w","plural","msAbs","n","isPlural","str","String","exec","parseFloat","parse","long","fmtLong","fmtShort","trim","string","headers","arg","headersArr","row","DefaultContext","undefined","className","attr","IconContext","React","__assign","assign","t","p","__rest","e","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","node","tag","child","GenIcon","data","props","IconBase","elem","conf","title","svgProps","computedSize","stroke","fill","strokeWidth","xmlns","children","Consumer","arr","arr2","__esModule","arrayLikeToArray","isArray","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","constructor","asyncGeneratorStep","gen","resolve","reject","_next","_throw","info","Promise","then","_asyncToGenerator","fn","err","_regeneratorRuntime","Op","hasOwn","obj","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","resultName","next","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","object","reverse","pop","skipTempReset","charAt","stop","rootRecord","rval","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","defaultOptions","timeout","product","processOptions","opts","URL","normalizeTimeout","query","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","_createForOfIteratorHelper","searchParams","append","f","body","toUpperCase","origin","pathname","time","connect","socket","delay","validUrl","validateOptions","channelNames","middlehooks","createRequester","initMiddleware","httpRequest","loadedMiddleware","middleware","reduce","ware","request","channels","target","subscribers","nextId","publish","event","subscribe","subscriber","createPubSub","applyMiddleware","hook","defaultValue","bailEarly","middlewareReducer","ongoingRequest","unsubscribe","ctx","res","reqErr","response","onResponse","abort","returnValue","use","newMiddleware","onReturn","clone","_method","_url","_resHeaders","_headers","_controller","FetchXhr","_classCallCheck","readyState","responseType","__privateAdd","_createClass","_async","__privateSet","onreadystatechange","__privateGet","_this","textBody","AbortController","EventTarget","signal","credentials","withCredentials","fetch","status","statusText","text","arrayBuffer","resBody","responseText","catch","_a","onerror","onabort","WeakMap","adapter","XMLHttpRequest","XmlHttpRequest","httpRequester","callback","timers","injectedResponse","cbTimer","setTimeout","clearTimeout","xhr","delays","aborted","loaded","timedOut","onError","ontimeout","stopTimers","timeoutRequest","resetTimers","parseHeaders","getAllResponseHeaders","statusCode","statusMessage","onLoad","open","setRequestHeader","rawBody","send","code","force","isNetworkError","isObject","isBuffer","Buffer","serializeTypes","jsonRequest","pipe","prot","isPlainObject","jsonResponse","contentType","shouldDecode","tryParse","Accept","global$1","globalThis","global","observable","Observable","implementation","observer","progress","promise","PromiseImplementation","cancel","cancelToken","reason","onlyBody","Cancel","__CANCEL__","_CancelToken","executor","_this2","resolvePromise","CancelToken","token","can","isCancel","defaultShouldRetry","attempt","getRetryDelay","attemptNum","pow","random","maxRetries","retryDelay","allowRetry","shouldRetry","stream","attemptNumber","newContext","sharedRetry","_objectSpread","extendStatics","b","__extends","__","__values","__read","ar","__spreadArray","to","pack","l","isFunction","createErrorClass","createImpl","ctorFunc","instance","UnsubscriptionError","_super","errors","arrRemove","item","Subscription","initialTeardown","closed","_parentage","_finalizers","_parentage_1","_parentage_1_1","remove","initialFinalizer","_finalizers_1","_finalizers_1_1","finalizer","execFinalizer","add","teardown","_hasParent","_addParent","includes","_removeParent","EMPTY","empty","isSubscription","onUnhandledError","onStoppedNotification","useDeprecatedSynchronousErrorHandling","useDeprecatedNextContext","timeoutProvider","_setTimeout","_x","_x2","handler","_clearTimeout","_x3","noop","COMPLETE_NOTIFICATION","createNotification","kind","Subscriber","destination","isStopped","EMPTY_OBSERVER","SafeSubscriber","handleStoppedNotification","nextNotification","_error","_complete","_bind","Function","bind","thisArg","ConsumerObserver","partialObserver","handleUnhandledError","observerOrNext","context_1","errorThrown","reportUnhandledError","notification","identity","pipeFromArray","fns","input","_subscribe","lift","operator","isObserver","cb","isRoot","errorContext","_trySubscribe","sink","promiseCtor","getPromiseCtor","Symbol_observable","operations","toPromise","EmptyError","lastValueFrom","hasConfig","_value","_hasValue","operate","hasLift","liftedSource","createOperatorSubscriber","onNext","onComplete","onFinalize","OperatorSubscriber","shouldUnsubscribe","closed_1","project","predicate","ClientError","_Error","_inherits","_createSuper","extractErrorProps","_assertThisInitialized","_wrapNativeSuper","ServerError","_Error2","_super2","responseBody","stringifyBody","details","description","isMutationError","allItems","items","itemsStr","httpErrorMessage","httpError","printWarnings","msg","projectHeader","getSelection","sel","selectionOpts","_client$5","_client2$5","VALID_ASSET_TYPES","VALID_INSERT_LOCATIONS","validateObject","op","validateDocumentId","requireDocumentId","doc","hasDataset","requestTag","encodeQueryString","_ref$params","_ref$options","URLSearchParams","_objectWithoutProperties","_excluded","_i2","_Object$entries2","_Object$entries2$_i","BasePatch","selection","attrs","_assign","unset","at","selector","_this$_assign","signature","valid","validateInsert","_defineProperty","insert","start","deleteCount","startIndex","delCount","delRange","rangeSelector","rev","ifRevisionID","serialize","merge","ObservablePatch","_BasePatch","_ObservablePatch","_super3","_this3","__privateAdd$6","__privateSet$6","__privateGet$6","returnFirst","returnDocuments","mutate","patch","Patch","_BasePatch2","_Patch","_super4","_this4","_client$4","_client2$4","defaultMutateOptions","BaseTransaction","transactionId","trxId","_add","documentId","delete","mut","Transaction","_BaseTransaction","_Transaction","_super5","_this5","__privateAdd$5","__privateSet$5","__privateGet$5","patchOrDocumentId","patchOps","isBuilder","ObservableTransaction","_BaseTransaction2","_ObservableTransaction","_super6","_this6","getMutationQuery","defValue","dryRun","returnIds","visibility","autoGenerateArrayKeys","skipCrossDatasetReferenceValidation","isResponse","getBody","getQuerySizeLimit","_fetch","mapResponse","filterResponse","_dataRequest","_getDocument","_requestObservable","uri","_getDataUrl","json","documents","_getDocuments","ids","docs","indexed","_createIfNotExists","_create","_createOrReplace","_delete","mutations","_mutate","endpoint","isMutation","isQuery","strQuery","useGet","stringQuery","canUseCdn","results","useCdn","requestTagPrefix","reqOptions","overrides","Authorization","useGlobalApi","useProjectHostname","proxy","requestOptions","_getUrl","requester","_b","isDomExceptionSupported","DOMException","_createAbortError","subscription","addEventListener","removeEventListener","_request","operation","path","catalog","baseUri","_client$config","_client$3","_httpRequest$4","_client2$3","_httpRequest2$4","ObservableAssetsClient","__privateAdd$4","__privateSet$4","assetType","_upload","__privateGet$4","AssetsClient","validateAssetType","meta","extract","assetEndpoint","file","File","preserveFilename","optionsFromFile","label","creditLine","sourceId","sourceName","sourceUrl","generateHelpUrl","slug","createWarningPrinter","didCall","_console","printCdnWarning","printBrowserTokenWarning","printNoApiVersionSpecifiedWarning","defaultConfig","apiVersion","LOCALHOSTS","initConfig","prevConfig","specifiedConfig","newConfig","projectBased","helpUrl","isBrowser","location","hostname","isLocalhost","host","isLocal","ignoreBrowserTokenWarning","isDefaultApi","apiDate","getTime","validateApiVersion","hostParts","protocol","cdnHost","possibleOptions","includeResult","_listen","defaults","_this$config","prop","listenOpts","pick","qs","listenFor","events","shouldEmitReconnect","esOptions","es","reconnectTimer","getEventSource","eventSource","stopped","CLOSED","onChannelError","evt","parseEvent","extractErrorMessage","cooerceError","onMessage","onDisconnect","close","_getEventSource","_callee","_yield$import","EventSource","evs","_context","_client$2","_httpRequest$3","_client2$2","_httpRequest2$3","ObservableDatasetsClient","__privateAdd$3","__privateSet$3","_modify","__privateGet$3","DatasetsClient","_client$1","_httpRequest$2","_client2$1","_httpRequest2$2","ObservableProjectsClient","__privateAdd$2","__privateSet$2","__privateGet$2","ProjectsClient","_client","_httpRequest$1","_client2","_httpRequest2$1","ObservableUsersClient","__privateAdd$1","__privateSet$1","__privateGet$1","UsersClient","_clientConfig","_httpRequest","_clientConfig2","_httpRequest2","_ObservableSanityClient","listen","assets","datasets","projects","users","allowReconfigure","ObservableSanityClient","_SanityClient","SanityClient","envMiddleware","getIt","onRequest","upload","onprogress","handleProgress","stage","percent","lengthComputable","total","maxRedirects","defaultRequester","defineHttpRequest","createClient"],"sourceRoot":""}