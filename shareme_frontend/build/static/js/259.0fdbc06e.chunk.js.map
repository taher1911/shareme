{"version":3,"file":"static/js/259.0fdbc06e.chunk.js","mappings":"uTAkHA,EAlGc,WACZ,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,GAAQC,EAAAA,EAAAA,IAAe,CAC3BC,UAAU,WAAD,IAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAOC,GAAa,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAAA,EAAAA,KAAAU,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETC,EAAAA,EAAAA,IAChB,gDACA,CACEC,QAAS,CACPC,cAAc,UAADC,OAAYd,EAAce,iBAG3C,KAAD,EASA,OAhBKd,EAAGO,EAAAQ,KASTC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUnB,EAAIoB,OAAOnB,EACxBD,EAAIoB,KAA3BlB,EAAID,EAAJC,KAAMC,EAAOF,EAAPE,QAASC,EAAGH,EAAHG,IACjBC,EAAM,CACVgB,IAAKjB,EACLkB,MAAO,OACPC,SAAUrB,EACVsB,MAAOrB,GACRI,EAAAE,KAAA,EACkBgB,EAAAA,EAAAA,kBAAyBpB,GAAK,KAAD,EAAtCE,EAAAQ,MAER1B,EAAS,IAAK,CAAEqC,SAAS,IAC1BnB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAoB,GAAApB,EAAA,SAEDqB,QAAQC,IAAGtB,EAAAoB,IAAM,yBAAApB,EAAAuB,OAAA,GAAAhC,EAAA,mBAEpB,gBAAAiC,GAAA,OAAArC,EAAAsC,MAAA,KAAAC,UAAA,EA1BS,GA2BVC,UAAW,SAACC,GAAQ,OAAKP,QAAQC,IAAIM,EAAS,IAahD,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDC,UAChEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,SACEI,IAAKC,EACLC,KAAK,YACLC,MAAI,EACJC,UAAU,EACVC,OAAK,EACLC,UAAQ,EACRT,UAAU,gCAEZE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oGAAmGC,SAAA,EAChHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBF,EAAAA,EAAAA,KAAA,OAAKI,I,isRAAWO,MAAM,QAAQC,IAAI,YAEpCZ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UAoBzBC,EAAAA,EAAAA,MAAA,UACEG,KAAK,SACLL,UAAU,kGACVY,QAAS,kBAAM1D,GAAO,EAAC+C,SAAA,CAEtB,KACDF,EAAAA,EAAAA,KAACc,EAAAA,IAAQ,CAACb,UAAU,SAAS,mCAU3C,C,+GC7GaZ,GAAS0B,EAAAA,EAAAA,IAAa,CACjCC,UAAWC,WACXC,QAAS,aACTC,WAAY,aACZC,QAAQ,EACRC,MAAOJ,uLACPK,2BAA2B,IAGvBC,EAAUC,IAAgBnC,GACnBoC,EAAS,SAACC,GAAM,OAAKH,EAAQnC,MAAMsC,EAAQ,C","sources":["pages/Login.jsx","sanity/client.js"],"sourcesContent":["import React from \"react\";\n\n//google auth\nimport { useGoogleLogin } from \"@react-oauth/google\";\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\nimport axios from \"axios\";\n// import {GoogleLogin} from '@react-oauth/google'\n// import jwt_decode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FcGoogle } from \"react-icons/fc\";\n// import { FaFacebookF } from \"react-icons/fa\";\nimport shareVideo from \"../assets/share.mp4\";\nimport logo from \"../assets/logowhite.png\";\n\nimport { client } from \"../sanity/client\";\n\nconst Login = () => {\n  const navigate = useNavigate();\n\n  const login = useGoogleLogin({\n    onSuccess: async (tokenResponse) => {\n      try {\n        const res = await axios.get(\n          \"https://www.googleapis.com/oauth2/v3/userinfo\",\n          {\n            headers: {\n              Authorization: `Bearer ${tokenResponse.access_token}`,\n            },\n          }\n        );\n\n        localStorage.setItem(\"user\", JSON.stringify(res.data));\n        const { name, picture, sub } = res.data;\n        const doc = {\n          _id: sub,\n          _type: \"user\",\n          userName: name,\n          image: picture,\n        };\n        const user = await client.createIfNotExists(doc);\n        if (user) {\n          navigate(\"/\", { replace: true });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    onFailure: (response) => console.log(response),\n  });\n\n  // const onSuccess = (response) => {\n  //   const decoded = jwt_decode(response.credential);\n  //   console.log(response.credential);\n  //   console.log(decoded);\n  // };\n\n  // const onFailure = (response) => {\n  //   console.log(response);\n  // };\n\n  return (\n    <div className=\"flex justify-start items-center flex-col h-screen\">\n      <div className=\"w-full h-full relative\">\n        <video\n          src={shareVideo}\n          type=\"video/mp4\"\n          loop\n          controls={false}\n          muted\n          autoPlay\n          className=\"w-full h-full object-cover\"\n        />\n        <div className=\"absolute flex flex-col  justify-center items-center top-0 left-0 bottom-0 right-0 bg-blackOverlay\">\n          <div className=\"p-5\">\n            <img src={logo} width=\"130px\" alt=\"logo\" />\n          </div>\n          <div className=\"shadow-2xl\">\n            {/* facebook login  */}\n\n            {/* <FacebookLogin\n              appId={process.env.REACT_APP_FACEBOOK_TOKEN}\n              fields=\"name,email,picture\"\n              callback={responseFacebook}\n              render={(renderProps) => (\n                <button\n                  type=\"button\"\n                  className=\"bg-mainColor flex justify-center items-center p-3 rounded-lg cursor-pointer outline-none w-full mb-3\"\n                  onClick={renderProps.onClick}\n                >\n                  {\" \"}\n                  <FaFacebookF className=\"mr-4\" /> Sign in with facebook\n                </button>\n              )}\n            /> */}\n\n            {/* custom google login button  */}\n            <button\n              type=\"button\"\n              className=\"bg-mainColor flex justify-center items-center p-3 rounded-lg cursor-pointer outline-none w-full\"\n              onClick={() => login()}\n            >\n              {\" \"}\n              <FcGoogle className=\"mr-4\" /> Sign in with google\n            </button>\n\n            {/* google login button */}\n            {/* <GoogleLogin onSuccess={onSuccess} onFailure={onFailure} /> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import { createClient } from \"@sanity/client\";\nimport imageUrlBuilder from \"@sanity/image-url\";\n\nexport const client = createClient({\n  projectId: process.env.REACT_APP_SANITY_PROJECT_ID,\n  dataset: \"production\",\n  apiVersion: \"2023-04-13\",\n  useCdn: true,\n  token: process.env.REACT_APP_SANITY_TOKEN,\n  ignoreBrowserTokenWarning: true,\n});\n\nconst builder = imageUrlBuilder(client);\nexport const urlFor = (source) => builder.image(source);\n"],"names":["navigate","useNavigate","login","useGoogleLogin","onSuccess","_onSuccess","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tokenResponse","res","_res$data","name","picture","sub","doc","wrap","_context","prev","next","axios","headers","Authorization","concat","access_token","sent","localStorage","setItem","JSON","stringify","data","_id","_type","userName","image","client","replace","t0","console","log","stop","_x","apply","arguments","onFailure","response","_jsx","className","children","_jsxs","src","shareVideo","type","loop","controls","muted","autoPlay","width","alt","onClick","FcGoogle","createClient","projectId","process","dataset","apiVersion","useCdn","token","ignoreBrowserTokenWarning","builder","imageUrlBuilder","urlFor","source"],"sourceRoot":""}